{
    "project": {
        "name": "WireIt",
        "description": "WireIt",
        "version": "3.0.0pr2",
        "url": "http://neyric.github.com/wireit"
    },
    "files": {
        "src/arrow-wire/js/arrow-wire.js": {
            "name": "src/arrow-wire/js/arrow-wire.js",
            "modules": {
                "arrow-wire": 1
            },
            "classes": {
                "ArrowWire": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/bezier-wire/js/bezier-wire.js": {
            "name": "src/bezier-wire/js/bezier-wire.js",
            "modules": {
                "bezier-wire": 1
            },
            "classes": {
                "BezierWire": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/bidirectional-arrow-wire/js/bidirectional-arrow-wire.js": {
            "name": "src/bidirectional-arrow-wire/js/bidirectional-arrow-wire.js",
            "modules": {},
            "classes": {
                "BidirectionalArrowWire": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/common/docs/assets/vendor/prettify/prettify.js": {
            "name": "src/common/docs/assets/vendor/prettify/prettify.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/container/js/container.js": {
            "name": "src/container/js/container.js",
            "modules": {
                "container": 1
            },
            "classes": {
                "Container": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/container-base/js/container-base.js": {
            "name": "src/container-base/js/container-base.js",
            "modules": {
                "container-base": 1
            },
            "classes": {
                "ContainerBase": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/form-container/js/form-container.js": {
            "name": "src/form-container/js/form-container.js",
            "modules": {
                "form-container": 1
            },
            "classes": {
                "FormContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/image-container/js/image-container.js": {
            "name": "src/image-container/js/image-container.js",
            "modules": {
                "image-container": 1
            },
            "classes": {
                "ImageContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/inout-container/js/inout-container.js": {
            "name": "src/inout-container/js/inout-container.js",
            "modules": {
                "inout-container": 1
            },
            "classes": {
                "InOutContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/inputex-wirable/js/inputex-wirable.js": {
            "name": "src/inputex-wirable/js/inputex-wirable.js",
            "modules": {
                "inputex-wirable": 1
            },
            "classes": {
                "BaseField": 1,
                "Field": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/inputex-wirable-fields/js/inputex-wirable-fields.js": {
            "name": "src/inputex-wirable-fields/js/inputex-wirable-fields.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/layer/js/layer.js": {
            "name": "src/layer/js/layer.js",
            "modules": {
                "layer": 1
            },
            "classes": {
                "Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/straight-wire/js/straight-wire.js": {
            "name": "src/straight-wire/js/straight-wire.js",
            "modules": {
                "straight-wire": 1
            },
            "classes": {
                "StraightWire": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/terminal/js/terminal.js": {
            "name": "src/terminal/js/terminal.js",
            "modules": {
                "terminal": 1
            },
            "classes": {
                "Terminal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/terminal-base/js/terminal-base.js": {
            "name": "src/terminal-base/js/terminal-base.js",
            "modules": {
                "terminal-base": 1
            },
            "classes": {
                "TerminalBase": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/terminal-ddgroups/js/terminal-ddgroups.js": {
            "name": "src/terminal-ddgroups/js/terminal-ddgroups.js",
            "modules": {
                "terminal-ddgroups": 1
            },
            "classes": {
                "TerminalDDGroups": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/terminal-dragedit/js/terminal-dragedit.js": {
            "name": "src/terminal-dragedit/js/terminal-dragedit.js",
            "modules": {
                "terminal-dragedit": 1
            },
            "classes": {
                "TerminalDragEdit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/terminal-input/js/terminal-input.js": {
            "name": "src/terminal-input/js/terminal-input.js",
            "modules": {
                "terminal-input": 1
            },
            "classes": {
                "TerminalInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/terminal-output/js/terminal-output.js": {
            "name": "src/terminal-output/js/terminal-output.js",
            "modules": {
                "terminal-output": 1
            },
            "classes": {
                "TerminalOutput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/terminal-scissors/js/terminal-scissors.js": {
            "name": "src/terminal-scissors/js/terminal-scissors.js",
            "modules": {
                "terminal-scissors": 1
            },
            "classes": {
                "TerminalScissors": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/textarea-container/js/textarea-container.js": {
            "name": "src/textarea-container/js/textarea-container.js",
            "modules": {
                "textarea-container": 1
            },
            "classes": {
                "TextareaContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/widget-icons/js/widget-icons.js": {
            "name": "src/widget-icons/js/widget-icons.js",
            "modules": {
                "widget-icons": 1
            },
            "classes": {
                "WidgetIcons": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/wire-base/js/wire-base.js": {
            "name": "src/wire-base/js/wire-base.js",
            "modules": {
                "wire-base": 1
            },
            "classes": {
                "WireBase": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/wireit-app/js/wireit-app.js": {
            "name": "src/wireit-app/js/wireit-app.js",
            "modules": {
                "wireit-app": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/wires-delegate/js/wires-delegate.js": {
            "name": "src/wires-delegate/js/wires-delegate.js",
            "modules": {
                "wires-delegate": 1
            },
            "classes": {
                "WiresDelegate": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "arrow-wire": {
            "name": "arrow-wire",
            "submodules": {},
            "classes": {
                "ArrowWire": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/arrow-wire/js/arrow-wire.js",
            "line": 7
        },
        "bezier-wire": {
            "name": "bezier-wire",
            "submodules": {},
            "classes": {
                "BezierWire": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/bezier-wire/js/bezier-wire.js",
            "line": 5
        },
        "straight-wire": {
            "name": "straight-wire",
            "submodules": {},
            "classes": {
                "BidirectionalArrowWire": 1,
                "StraightWire": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/straight-wire/js/straight-wire.js",
            "line": 5
        },
        "container": {
            "name": "container",
            "submodules": {},
            "classes": {
                "Container": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/container/js/container.js",
            "line": 7
        },
        "container-base": {
            "name": "container-base",
            "submodules": {},
            "classes": {
                "ContainerBase": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/container-base/js/container-base.js",
            "line": 5
        },
        "form-container": {
            "name": "form-container",
            "submodules": {},
            "classes": {
                "FormContainer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/form-container/js/form-container.js",
            "line": 5
        },
        "image-container": {
            "name": "image-container",
            "submodules": {},
            "classes": {
                "ImageContainer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/image-container/js/image-container.js",
            "line": 5
        },
        "inout-container": {
            "name": "inout-container",
            "submodules": {},
            "classes": {
                "InOutContainer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/inout-container/js/inout-container.js",
            "line": 5
        },
        "inputex-wirable": {
            "name": "inputex-wirable",
            "submodules": {},
            "classes": {
                "BaseField": 1,
                "Field": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 13
        },
        "layer": {
            "name": "layer",
            "submodules": {},
            "classes": {
                "Layer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/layer/js/layer.js",
            "line": 5
        },
        "terminal": {
            "name": "terminal",
            "submodules": {},
            "classes": {
                "Terminal": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/terminal/js/terminal.js",
            "line": 7
        },
        "terminal-base": {
            "name": "terminal-base",
            "submodules": {},
            "classes": {
                "TerminalBase": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/terminal-base/js/terminal-base.js",
            "line": 7
        },
        "terminal-ddgroups": {
            "name": "terminal-ddgroups",
            "submodules": {},
            "classes": {
                "TerminalDDGroups": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/terminal-ddgroups/js/terminal-ddgroups.js",
            "line": 5
        },
        "terminal-dragedit": {
            "name": "terminal-dragedit",
            "submodules": {},
            "classes": {
                "TerminalDragEdit": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 5
        },
        "terminal-input": {
            "name": "terminal-input",
            "submodules": {},
            "classes": {
                "TerminalInput": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/terminal-input/js/terminal-input.js",
            "line": 5
        },
        "terminal-output": {
            "name": "terminal-output",
            "submodules": {},
            "classes": {
                "TerminalOutput": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/terminal-output/js/terminal-output.js",
            "line": 5
        },
        "terminal-scissors": {
            "name": "terminal-scissors",
            "submodules": {},
            "classes": {
                "TerminalScissors": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/terminal-scissors/js/terminal-scissors.js",
            "line": 5
        },
        "textarea-container": {
            "name": "textarea-container",
            "submodules": {},
            "classes": {
                "TextareaContainer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/textarea-container/js/textarea-container.js",
            "line": 5
        },
        "widget-icons": {
            "name": "widget-icons",
            "submodules": {},
            "classes": {
                "WidgetIcons": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/widget-icons/js/widget-icons.js",
            "line": 5
        },
        "wire-base": {
            "name": "wire-base",
            "submodules": {},
            "classes": {
                "WireBase": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/wire-base/js/wire-base.js",
            "line": 5
        },
        "wireit-app": {
            "name": "wireit-app",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/wireit-app/js/wireit-app.js",
            "line": 1
        },
        "wires-delegate": {
            "name": "wires-delegate",
            "submodules": {},
            "classes": {
                "WiresDelegate": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/wires-delegate/js/wires-delegate.js",
            "line": 5
        }
    },
    "classes": {
        "ArrowWire": {
            "name": "ArrowWire",
            "shortname": "ArrowWire",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arrow-wire",
            "namespace": "",
            "file": "src/arrow-wire/js/arrow-wire.js",
            "line": 7,
            "description": "Extend CanvasWire to draw an arrow wire",
            "extends": "WireBase",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "the configuration for the ArrowWire attributes",
                    "type": "Object"
                }
            ]
        },
        "BezierWire": {
            "name": "BezierWire",
            "shortname": "BezierWire",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bezier-wire",
            "namespace": "",
            "file": "src/bezier-wire/js/bezier-wire.js",
            "line": 5,
            "description": "Extend WireBase to draw a bezier curve",
            "extends": "WireBase",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "the configuration for the BezierWire attributes",
                    "type": "Object"
                }
            ]
        },
        "BidirectionalArrowWire": {
            "name": "BidirectionalArrowWire",
            "shortname": "BidirectionalArrowWire",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "straight-wire",
            "namespace": "",
            "file": "src/bidirectional-arrow-wire/js/bidirectional-arrow-wire.js",
            "line": 5,
            "description": "BidirectionalArrowWire",
            "extends": "WireBase",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "the configuration for the BezierWire attributes",
                    "type": "Object"
                }
            ]
        },
        "Container": {
            "name": "Container",
            "shortname": "Container",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container",
            "namespace": "",
            "file": "src/container/js/container.js",
            "line": 7,
            "description": "Container is an Overlay (XY positioning)\nIt is a WidgetChild (belongs to Layer)\nIt is also a WidgetParent (has many terminals)",
            "extends": "ContainerBase"
        },
        "ContainerBase": {
            "name": "ContainerBase",
            "shortname": "ContainerBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container-base",
            "namespace": "",
            "file": "src/container-base/js/container-base.js",
            "line": 5,
            "description": "ContainerBase is an Overlay (XY positioning)\nIt is a WidgetChild (belongs to Layer)\nIt is also a WidgetParent (has many terminals)",
            "extends": "Overlay",
            "uses": [
                "WidgetParent",
                "WidgetChild",
                "WiresDelegate"
            ],
            "is_constructor": 1
        },
        "FormContainer": {
            "name": "FormContainer",
            "shortname": "FormContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form-container",
            "namespace": "",
            "file": "src/form-container/js/form-container.js",
            "line": 5,
            "description": "Include the form library inputEx + WirableField + FormContainer<br />\n<br />\n<b>WARNING</b>: The \"WirableField.js\" file MUST be loaded AFTER \"inputEx/field.js\" and BEFORE all other inputEx fields !<br />\n<br />\nSee the inputEx website for documentation of the fields & forms: <a href='http://neyric.github.com/inputex'>http://neyric.github.com/inputex</a><br />\n\nClass used to build a container with inputEx forms",
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Configuration object (see properties)",
                    "type": "Object"
                },
                {
                    "name": "layer",
                    "description": "The Y.Layer (or subclass) instance that contains this container",
                    "type": "Layer"
                }
            ]
        },
        "ImageContainer": {
            "name": "ImageContainer",
            "shortname": "ImageContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image-container",
            "namespace": "",
            "file": "src/image-container/js/image-container.js",
            "line": 5,
            "description": "ImageContainer is an Overlay (XY positioning)\nIt is a WidgetChild (belongs to Layer)\nIt is also a WidgetParent (has many terminals)",
            "extends": "ContainerBase",
            "is_constructor": 1
        },
        "InOutContainer": {
            "name": "InOutContainer",
            "shortname": "InOutContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inout-container",
            "namespace": "",
            "file": "src/inout-container/js/inout-container.js",
            "line": 5,
            "description": "Container with left inputs and right outputs",
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "layer",
                    "description": "",
                    "type": "Layer"
                }
            ]
        },
        "BaseField": {
            "name": "BaseField",
            "shortname": "BaseField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-wirable",
            "namespace": "",
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 7,
            "description": "Copy of the original inputEx.Field class that we're gonna override to extend it."
        },
        "Field": {
            "name": "Field",
            "shortname": "Field",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-wirable",
            "namespace": "",
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 13,
            "description": "Class to make inputEx Fields \"wirable\".Re-create inputEx.Field adding the wirable properties",
            "extends": "inputEx.BaseField"
        },
        "Layer": {
            "name": "Layer",
            "shortname": "Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "layer",
            "namespace": "",
            "file": "src/layer/js/layer.js",
            "line": 5,
            "description": "Layer : Widget to manage collections of wires (through WiresDelegate) and containers (trough WidgetParent)",
            "extends": "Widget",
            "uses": [
                "WidgetParent",
                "WiresDelegate"
            ]
        },
        "StraightWire": {
            "name": "StraightWire",
            "shortname": "StraightWire",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "straight-wire",
            "namespace": "",
            "file": "src/straight-wire/js/straight-wire.js",
            "line": 5,
            "description": "Straight Wire",
            "extends": "WireBase",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "the configuration for the StraightWire attributes",
                    "type": "Object"
                }
            ]
        },
        "Terminal": {
            "name": "Terminal",
            "shortname": "Terminal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "terminal",
            "namespace": "",
            "file": "src/terminal/js/terminal.js",
            "line": 7,
            "description": "Terminal is responsible for wire edition",
            "extends": "TerminalBase",
            "uses": [
                "TerminalDragEdit",
                "TerminalScissors",
                "TerminalDDGroups"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "oConfigs",
                    "description": "The user configuration for the instance.",
                    "type": "Object"
                }
            ]
        },
        "TerminalBase": {
            "name": "TerminalBase",
            "shortname": "TerminalBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "terminal-base",
            "namespace": "",
            "file": "src/terminal-base/js/terminal-base.js",
            "line": 7,
            "description": "Terminal is responsible for wire edition",
            "is_constructor": 1,
            "extends": "Widget",
            "uses": [
                "WidgetChild",
                "WidgetPosition",
                "WidgetPositionAlign",
                "WiresDelegate"
            ],
            "params": [
                {
                    "name": "oConfigs",
                    "description": "The user configuration for the instance.",
                    "type": "Object"
                }
            ]
        },
        "TerminalDDGroups": {
            "name": "TerminalDDGroups",
            "shortname": "TerminalDDGroups",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Terminal"
            ],
            "module": "terminal-ddgroups",
            "namespace": "",
            "file": "src/terminal-ddgroups/js/terminal-ddgroups.js",
            "line": 5,
            "description": "Extension to add \"groups\" labels when hovering the terminal",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "TerminalDragEdit": {
            "name": "TerminalDragEdit",
            "shortname": "TerminalDragEdit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Terminal"
            ],
            "module": "terminal-dragedit",
            "namespace": "",
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 5,
            "description": "Extension which makes the wires editable",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "TerminalInput": {
            "name": "TerminalInput",
            "shortname": "TerminalInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "terminal-input",
            "namespace": "",
            "file": "src/terminal-input/js/terminal-input.js",
            "line": 5,
            "description": "Class that extends Terminal to differenciate Input/Output terminals",
            "extends": "Terminal",
            "is_constructor": 1,
            "params": [
                {
                    "name": "parentEl",
                    "description": "Parent dom element",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "configuration object",
                    "type": "Object"
                },
                {
                    "name": "container",
                    "description": "(Optional) Container containing this terminal",
                    "type": "Container"
                }
            ]
        },
        "TerminalOutput": {
            "name": "TerminalOutput",
            "shortname": "TerminalOutput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "terminal-output",
            "namespace": "",
            "file": "src/terminal-output/js/terminal-output.js",
            "line": 5,
            "description": "Class that extends Terminal to differenciate Input/Output terminals",
            "extends": "Terminal",
            "is_constructor": 1,
            "params": [
                {
                    "name": "parentEl",
                    "description": "Parent dom element",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "configuration object",
                    "type": "Object"
                },
                {
                    "name": "container",
                    "description": "(Optional) Container containing this terminal",
                    "type": "Container"
                }
            ]
        },
        "TerminalScissors": {
            "name": "TerminalScissors",
            "shortname": "TerminalScissors",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Terminal"
            ],
            "module": "terminal-scissors",
            "namespace": "",
            "file": "src/terminal-scissors/js/terminal-scissors.js",
            "line": 5,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "TextareaContainer": {
            "name": "TextareaContainer",
            "shortname": "TextareaContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "textarea-container",
            "namespace": "",
            "file": "src/textarea-container/js/textarea-container.js",
            "line": 5,
            "description": "Form container for a single textarea field which is resizeable. \nImportant: this class takes the exact same arguments as the FormContainer !\nYou still need to specify the \"fields\".",
            "extends": "FormContainer",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Configuration object (see properties)",
                    "type": "Object"
                }
            ]
        },
        "WidgetIcons": {
            "name": "WidgetIcons",
            "shortname": "WidgetIcons",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "widget-icons",
            "namespace": "",
            "file": "src/widget-icons/js/widget-icons.js",
            "line": 5,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "WireBase": {
            "name": "WireBase",
            "shortname": "WireBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wire-base",
            "namespace": "",
            "file": "src/wire-base/js/wire-base.js",
            "line": 5,
            "description": "The wire widget\nThe wire is drawn between \"src\" and \"tgt\" (so they might be directional).\n\n\"src\" and \"tgt\" MUST have a \"getXY\" function\n\n\"src\" and \"tgt\" MAY additionnaly have the \"addWire\", \"removeWire\" methods.\nThose methods are designed to be used through the Y.WiringsDelegate extension,\nwhich provide basic list-handling on wires.",
            "extends": "Path",
            "params": [
                {
                    "name": "oConfigs",
                    "description": "The user configuration for the instance.",
                    "type": "Object"
                }
            ]
        },
        "WiresDelegate": {
            "name": "WiresDelegate",
            "shortname": "WiresDelegate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "ContainerBase",
                "Layer",
                "TerminalBase"
            ],
            "module": "wires-delegate",
            "namespace": "",
            "file": "src/wires-delegate/js/wires-delegate.js",
            "line": 5,
            "description": "WiresDelegate is an extension for Widgets to manipulate a list of wires.\n\nThe WidgetParent/WidgetChild relationship isn't sufficient\nbecause wires have 2 parents, so we use this extension instead of WidgetParent",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/arrow-wire/js/arrow-wire.js",
            "line": 21,
            "itemtype": "method",
            "name": "_draw",
            "access": "private",
            "tagname": "",
            "class": "ArrowWire",
            "module": "arrow-wire"
        },
        {
            "file": "src/bezier-wire/js/bezier-wire.js",
            "line": 20,
            "description": "Draw the bezier curve.\nThe canvas is made bigger to contain the curls",
            "itemtype": "method",
            "name": "private",
            "class": "BezierWire",
            "module": "bezier-wire"
        },
        {
            "file": "src/bezier-wire/js/bezier-wire.js",
            "line": 61,
            "description": "Norm of the tangeant vector at the endpoints.",
            "itemtype": "attribute",
            "name": "bezierTangentNorm",
            "default": "100",
            "type": "Integer",
            "class": "BezierWire",
            "module": "bezier-wire"
        },
        {
            "file": "src/bidirectional-arrow-wire/js/bidirectional-arrow-wire.js",
            "line": 20,
            "itemtype": "method",
            "name": "_draw",
            "access": "private",
            "tagname": "",
            "class": "BidirectionalArrowWire",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 19,
            "fileoverview": "some functions for browser-side pretty printing of code contained in html.\n\n<p>\nFor a fairly comprehensive set of languages see the\n<a href=\"http://google-code-prettify.googlecode.com/svn/trunk/README.html#langs\">README</a>\nfile that came with this source.  At a minimum, the lexer should work on a\nnumber of languages including C and friends, Java, Python, Bash, SQL, HTML,\nXML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk\nand a subset of Perl, but, because of commenting conventions, doesn't work on\nSmalltalk, Lisp-like, or CAML-like languages without an explicit lang class.\n<p>\nUsage: <ol>\n<li> include this source file in an html page via\n  {@code <script type=\"text/javascript\" src=\"/path/to/prettify.js\"></script>}\n<li> define style rules.  See the example page for examples.\n<li> mark the {@code <pre>} and {@code <code>} tags in your source with\n   {@code class=prettyprint.}\n   You can also use the (html deprecated) {@code <xmp>} tag, but the pretty\n   printer needs to do more substantial DOM manipulations to support that, so\n   some css styles may not be preserved.\n</ol>\nThat's it.  I wanted to keep the API as simple as possible, so there's no\nneed to specify which language the code is in, but if you wish, you can add\nanother class to the {@code <pre>} or {@code <code>} element to specify the\nlanguage, as in {@code <pre class=\"prettyprint lang-java\">}.  Any class that\nstarts with \"lang-\" followed by a file extension, specifies the file type.\nSee the \"lang-*.js\" files in this directory for code that implements\nper-language file handlers.\n<p>\nChange log:<br>\ncbeust, 2006/08/22\n<blockquote>\n  Java annotations (start with \"@\") are now captured as literals (\"lit\")\n</blockquote>",
            "requires": [
                "console"
            ],
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 61,
            "description": "Split {@code prettyPrint} into multiple timeouts so as not to interfere with\nUI events.\nIf set to {@code false}, {@code prettyPrint()} is synchronous.",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 117,
            "description": "token style for a string literal",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 122,
            "description": "token style for a keyword",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 127,
            "description": "token style for a comment",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 132,
            "description": "token style for a type",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 137,
            "description": "token style for a literal value.  e.g. 1, null, true.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 142,
            "description": "token style for a punctuation string.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 147,
            "description": "token style for a punctuation string.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 153,
            "description": "token style for an sgml tag.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 158,
            "description": "token style for a markup declaration such as a DOCTYPE.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 163,
            "description": "token style for embedded source.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 168,
            "description": "token style for an sgml attribute name.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 173,
            "description": "token style for an sgml attribute value.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 179,
            "description": "A class that indicates a section of markup that is not code, e.g. to allow\nembedding of line numbers within code listings.",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 188,
            "description": "A set of tokens that can precede a regular expression literal in\njavascript\nhttp://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html\nhas the full list, but I've removed ones that might be problematic when\nseen in languages that don't support regular expression literals.\n\n<p>Specifically, I've removed any keywords that can't precede a regexp\nliteral in a syntactically legal javascript program, and I've removed the\n\"in\" keyword since it's not a keyword in many languages, and might be used\nas a count of inches.\n\n<p>The link a above does not accurately describe EcmaScript rules since\nit fails to distinguish between (a=++/b/i) and (a++/b/i) but it works\nvery well in practice.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 216,
            "description": "Given a group of {@link RegExp}s, returns a {@code RegExp} that globally\nmatches the union of the sets of strings matched by the input RegExp.\nSince it matches globally, if the input strings have a start-of-input\nanchor (/^.../), it is ignored for the purposes of unioning.",
            "params": [
                {
                    "name": "regexs",
                    "description": "non multiline, non-global regexs.",
                    "type": "Array.<RegExp>"
                }
            ],
            "return": {
                "description": "a global regex.",
                "type": "RegExp"
            },
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 453,
            "description": "Split markup into a string of source code and an array mapping ranges in\nthat string to the text nodes in which they appear.\n\n<p>\nThe HTML DOM structure:</p>\n<pre>\n(Element   \"p\"\n  (Element \"b\"\n    (Text  \"print \"))       ; #1\n  (Text    \"'Hello '\")      ; #2\n  (Element \"br\")            ; #3\n  (Text    \"  + 'World';\")) ; #4\n</pre>\n<p>\ncorresponds to the HTML\n{@code <p><b>print </b>'Hello '<br>  + 'World';</p>}.</p>\n\n<p>\nIt will produce the output:</p>\n<pre>\n{\n  sourceCode: \"print 'Hello '\\n  + 'World';\",\n  //                 1         2\n  //       012345678901234 5678901234567\n  spans: [0, #1, 6, #2, 14, #3, 15, #4]\n}\n</pre>\n<p>\nwhere #1 is a reference to the {@code \"print \"} text node above, and so\non for the other text nodes.\n</p>\n\n<p>\nThe {@code} spans array is an array of pairs.  Even elements are the start\nindices of substrings, and odd elements are the text nodes (or BR elements)\nthat contain the text for those substrings.\nSubstrings continue until the next index or the end of the source.\n</p>",
            "params": [
                {
                    "name": "node",
                    "description": "an HTML DOM subtree containing source-code.",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "source code and the text nodes in which they occur.",
                "type": "Object"
            },
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 554,
            "description": "Apply the given language handler to sourceCode and add the resulting\ndecorations to out.",
            "params": [
                {
                    "name": "basePos",
                    "description": "the index of sourceCode within the chunk of source\n   whose decorations are already present on out.",
                    "type": "Number"
                }
            ],
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 572,
            "description": "Given an element, if it contains only one child element and any text nodes\nit contains contain only space characters, return the sole child element.\nOtherwise returns undefined.\n<p>\nThis is meant to return the CODE element in {@code <pre><code ...>} when\nthere is a single child element that contains all the non-space textual\ncontent, but not to return anything where there are multiple child elements\nas in {@code <pre><code>...</code><code>...</code></pre>} or when there\nis textual content.",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 596,
            "description": "The lexing function interprets the patterns to find token boundaries and\nreturns a decoration list of the form\n[index_0, style_0, index_1, style_1, ..., index_n, style_n]\nwhere index_n is an index into the sourceCode, and style_n is a style\nconstant like PR_PLAIN.  index_n-1 <= index_n, and style_n-1 applies to\nall characters in sourceCode[index_n-1:index_n].\n\nThe stylePatterns is a list whose elements have the form\n[style : string, pattern : RegExp, DEPRECATED, shortcut : string].\n\nStyle is a style constant like PR_PLAIN, or can be a string of the\nform 'lang-FOO', where FOO is a language extension describing the\nlanguage of the portion of the token in $1 after pattern executes.\nE.g., if style is 'lang-lisp', and group 1 contains the text\n'(hello (world))', then that portion of the token will be passed to the\nregistered lisp handler for formatting.\nThe text before and after group 1 will be restyled using this decorator\nso decorators should take care that this doesn't result in infinite\nrecursion.  For example, the HTML lexer rule for SCRIPT elements looks\nsomething like ['lang-js', /<[s]cript>(.+?)<\\/script>/].  This may match\n'<script>foo()<\\/script>', which would cause the current decorator to\nbe called with '<script>' which would not match the same rule since\ngroup 1 must not be empty, so it would be instead styled as PR_TAG by\nthe generic tag rule.  The handler registered for the 'js' extension would\nthen be called with 'foo()', and finally, the current decorator would\nbe called with '<\\/script>' which would not match the original rule and\nso the generic tag rule would identify it as a tag.\n\nPattern must only match prefixes, and if it matches a prefix, then that\nmatch is considered a token with the same style.\n\nContext is applied to the last non-whitespace, non-comment token\nrecognized.\n\nShortcut is an optional string of characters, any of which, if the first\ncharacter, gurantee that this pattern and only this pattern matches.",
            "params": [
                {
                    "name": "shortcutStylePatterns",
                    "description": "patterns that always start with\n  a known character.  Must have a shortcut string.",
                    "type": "Array"
                },
                {
                    "name": "fallthroughStylePatterns",
                    "description": "patterns that will be tried in\n  order if the shortcut ones fail.  May have shortcuts.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "a\n  function that takes source code and returns a list of decorations.",
                "type": "Function (Object)"
            },
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 670,
            "description": "Lexes job.sourceCode and produces an output array job.decorations of\nstyle classes preceded by the position at which they start in\njob.sourceCode in order.",
            "params": [
                {
                    "name": "job",
                    "description": "an object like <pre>{\n   sourceCode: {string} sourceText plain text,\n   basePos: {int} position of job.sourceCode in the larger chunk of\n       sourceCode.\n}</pre>",
                    "type": "Object"
                }
            ],
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 683,
            "description": "are style markers (e.g., PR_COMMENT) that run from that position until\nthe end.",
            "type": "{Array.<number|string>}",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 770,
            "description": "This code treats \", ', and ` as string delimiters, and \\ as a string\n escape.  It does not recognize perl's qq() style strings.\n It has no special handling for double delimiter escapes as in basic, or\n the tripled delimiters used in python, but should work on those regardless\n although in those cases a single string literal may be broken up into\n multiple adjacent string literals.\nIt recognizes C, C++, and shell style comments.",
            "params": [
                {
                    "name": "options",
                    "description": "a set of optional parameters.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a function that examines the source code\n     in the input job and builds the decoration list.",
                "type": "Function (Object)"
            },
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 835,
            "itemtype": "property",
            "name": "",
            "final": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 904,
            "description": "Given a DOM subtree, wraps it in a list, and puts each line into its own\nlist item.",
            "params": [
                {
                    "name": "node",
                    "description": "modified in place.  Its content is pulled into an\n    HTMLOListElement, and each line is moved into a separate list item.\n    This requires cloning elements, so the input might not have unique\n    IDs after numbering.",
                    "type": "Node"
                }
            ],
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1052,
            "description": "Breaks {@code job.sourceCode} around style boundaries in\n{@code job.decorations} and modifies {@code job.sourceNode} in place.",
            "params": [
                {
                    "name": "job",
                    "description": "like <pre>{\n   sourceCode: {string} source as plain text,\n   spans: {Array.<number|Node>} alternating span start indices into source\n      and the text node or element (e.g. {@code <BR>}) corresponding to that\n      span.\n   decorations: {Array.<number|string} an array of style classes preceded\n      by the position at which they start in job.sourceCode in order\n}</pre>",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1162,
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1164,
            "params": [
                {
                    "name": "handler",
                    "description": "a function from source code to a list\n     of decorations.  Takes a single argument job which describes the\n     state of the computation.   The single parameter has the form\n     {@code {\n       sourceCode: {string} as plain text.\n       decorations: {Array.<number|string>} an array of style classes\n                    preceded by the position at which they start in\n                    job.sourceCode in order.\n                    The language handler should assigned this field.\n       basePos: {int} the position of source in the larger source chunk.\n                All positions in the output decorations array are relative\n                to the larger source chunk.\n     } }",
                    "type": "Function (Object)"
                },
                {
                    "name": "fileExtensions",
                    "description": "",
                    "type": "Array.<string>"
                }
            ],
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1305,
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1324,
            "params": [
                {
                    "name": "sourceCodeHtml",
                    "description": "The HTML to pretty print.",
                    "type": "String"
                },
                {
                    "name": "opt_langExtension",
                    "description": "The language name to use.\n    Typically, a filename extension like 'cpp' or 'java'.",
                    "type": "String"
                },
                {
                    "name": "opt_numberLines",
                    "description": "True to number lines,\n    or the 1-indexed number of the first line in sourceCodeHtml.",
                    "type": "Number|boolean"
                }
            ],
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1443,
            "description": "Find all the {@code <pre>} and {@code <code>} tags in the DOM with\n{@code class=prettyprint} and prettify them.",
            "params": [
                {
                    "name": "opt_whenDone",
                    "description": "if specified, called when the last entry\n    has been finished.",
                    "type": "Function?"
                }
            ],
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1451,
            "description": "Pretty print a chunk of code.",
            "params": [
                {
                    "name": "sourceCodeHtml",
                    "description": "code as html",
                    "type": "String"
                }
            ],
            "return": {
                "description": "code as html, but prettier",
                "type": "String"
            },
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1458,
            "description": "Contains functions for creating and registering new language handlers.",
            "type": "{Object}",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1484,
            "fileoverview": "Registers a language handler for Handlebars.",
            "author": "Ryan Grove <ryan@wonko.com>",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/common/docs/assets/vendor/prettify/prettify.js",
            "line": 1546,
            "fileoverview": "Registers a language handler for CSS.\n\n\nTo use, include prettify.js and this file in your HTML page.\nThen put your code in an HTML tag like\n     <pre class=\"prettyprint lang-css\"></pre>\n\n\nhttp://www.w3.org/TR/CSS21/grammar.html Section G2 defines the lexical\ngrammar.  This scheme does not recognize keywords containing escapes.",
            "author": "mikesamuel@gmail.com",
            "class": "Container",
            "module": "straight-wire"
        },
        {
            "file": "src/container/js/container.js",
            "line": 15,
            "description": "Click handler for the close icon",
            "itemtype": "method",
            "name": "_onCloseClick",
            "access": "private",
            "tagname": "",
            "class": "Container",
            "module": "container"
        },
        {
            "file": "src/container/js/container.js",
            "line": 27,
            "description": "Override the default value of WidgetIcons to add the close button",
            "itemtype": "attribute",
            "name": "icons",
            "class": "Container",
            "module": "container"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 18,
            "itemtype": "method",
            "name": "renderUI",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 65,
            "itemtype": "method",
            "name": "alignTerminals",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 77,
            "itemtype": "method",
            "name": "syncUI",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 103,
            "description": "Get a terminal by name",
            "itemtype": "method",
            "name": "getTerminal",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 128,
            "itemtype": "attribute",
            "name": "defaultChildType",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 135,
            "itemtype": "attribute",
            "name": "zIndex",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 142,
            "itemtype": "attribute",
            "name": "resizable",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/container-base/js/container-base.js",
            "line": 149,
            "itemtype": "attribute",
            "name": "fillHeight",
            "class": "ContainerBase",
            "module": "container-base"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 21,
            "itemtype": "method",
            "name": "renderUI",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 29,
            "description": "Render the form in the widget body",
            "itemtype": "method",
            "name": "_renderForm",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 59,
            "description": "Value of the form",
            "itemtype": "attribute",
            "name": "value",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 79,
            "description": "Keep to render the form",
            "itemtype": "attribute",
            "name": "bodyContent",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 87,
            "itemtype": "attribute",
            "name": "fields",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 94,
            "itemtype": "attribute",
            "name": "resizable",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 105,
            "itemtype": "attribute",
            "name": "legend",
            "description": "Legend",
            "default": "null",
            "type": "String",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 113,
            "itemtype": "attribute",
            "name": "collapsible",
            "description": "Collapsible",
            "default": "false",
            "type": "Boolean",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/form-container/js/form-container.js",
            "line": 121,
            "description": "Render the form",
            "itemtype": "method",
            "name": "renderForm",
            "class": "FormContainer",
            "module": "form-container"
        },
        {
            "file": "src/image-container/js/image-container.js",
            "line": 15,
            "itemtype": "method",
            "name": "renderUI",
            "class": "ImageContainer",
            "module": "image-container"
        },
        {
            "file": "src/image-container/js/image-container.js",
            "line": 76,
            "description": "Url of the image you want to render (relative to the script's page)",
            "itemtype": "attribute",
            "name": "imageUrl",
            "class": "ImageContainer",
            "module": "image-container"
        },
        {
            "file": "src/inout-container/js/inout-container.js",
            "line": 16,
            "itemtype": "method",
            "name": "renderUI",
            "class": "InOutContainer",
            "module": "inout-container"
        },
        {
            "file": "src/inout-container/js/inout-container.js",
            "line": 24,
            "itemtype": "method",
            "name": "_renderInputsOutputs",
            "class": "InOutContainer",
            "module": "inout-container"
        },
        {
            "file": "src/inout-container/js/inout-container.js",
            "line": 73,
            "description": "Keep to render the form",
            "itemtype": "attribute",
            "name": "bodyContent",
            "class": "InOutContainer",
            "module": "inout-container"
        },
        {
            "file": "src/inout-container/js/inout-container.js",
            "line": 81,
            "itemtype": "attribute",
            "name": "inputs",
            "description": "Array of strings for which an Input terminal will be created.",
            "default": "[]",
            "type": "Array",
            "class": "InOutContainer",
            "module": "inout-container"
        },
        {
            "file": "src/inout-container/js/inout-container.js",
            "line": 89,
            "itemtype": "attribute",
            "name": "outputs",
            "description": "Array of strings for which an Output terminal will be created.",
            "default": "[]",
            "type": "Array",
            "class": "InOutContainer",
            "module": "inout-container"
        },
        {
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 24,
            "description": "Adds a wirable option to every field",
            "itemtype": "method",
            "name": "setOptions",
            "class": "Field",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 35,
            "description": "Adds a terminal to each field",
            "itemtype": "method",
            "name": "render",
            "class": "Field",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 47,
            "description": "Render the associated input terminal",
            "itemtype": "method",
            "name": "renderTerminal",
            "class": "Field",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 68,
            "description": "Set the container for this field",
            "class": "Field",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 84,
            "description": "also change the terminal name when changing the field name",
            "class": "Field",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 94,
            "description": "Remove the input wired state on the",
            "itemtype": "method",
            "name": "onAddWire",
            "class": "Field",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable/js/inputex-wirable.js",
            "line": 105,
            "description": "Remove the input wired state on the",
            "itemtype": "method",
            "name": "onRemoveWire",
            "class": "Field",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable-fields/js/inputex-wirable-fields.js",
            "line": 6,
            "description": "setFieldName might change the name of the terminal",
            "class": "Layer",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable-fields/js/inputex-wirable-fields.js",
            "line": 18,
            "description": "Groups must set the container recursively",
            "class": "Layer",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable-fields/js/inputex-wirable-fields.js",
            "line": 35,
            "description": "List must set the container recursively",
            "class": "Layer",
            "module": "inputex-wirable"
        },
        {
            "file": "src/inputex-wirable-fields/js/inputex-wirable-fields.js",
            "line": 50,
            "description": "setContainer must be called on each new element",
            "class": "Layer",
            "module": "inputex-wirable"
        },
        {
            "file": "src/layer/js/layer.js",
            "line": 21,
            "description": "Alias method for WidgetParent.removeAll",
            "itemtype": "method",
            "name": "clear",
            "class": "Layer",
            "module": "layer"
        },
        {
            "file": "src/straight-wire/js/straight-wire.js",
            "line": 20,
            "itemtype": "method",
            "name": "_draw",
            "access": "private",
            "tagname": "",
            "class": "StraightWire",
            "module": "straight-wire"
        },
        {
            "file": "src/terminal-base/js/terminal-base.js",
            "line": 54,
            "description": "This function is a temporary test. I added the border width while traversing the DOM and\nI calculated the offset to center the wire in the terminal just after its creation",
            "itemtype": "method",
            "name": "getXY",
            "class": "TerminalBase",
            "module": "terminal-base"
        },
        {
            "file": "src/terminal-base/js/terminal-base.js",
            "line": 71,
            "description": "Vector direction at the terminal\n(used by BezierWire ou Scissors)",
            "itemtype": "attribute",
            "name": "dir",
            "class": "TerminalBase",
            "module": "terminal-base"
        },
        {
            "file": "src/terminal-ddgroups/js/terminal-ddgroups.js",
            "line": 17,
            "description": "drag/drop groups : list of supported terminal types\nonly used if editable is set to true",
            "itemtype": "attribute",
            "name": "groups",
            "class": "TerminalDDGroups",
            "module": "terminal-ddgroups"
        },
        {
            "file": "src/terminal-ddgroups/js/terminal-ddgroups.js",
            "line": 40,
            "description": "create a persisting tooltip with the scissors class\nlisten for click events on the tooltip and call destroyWires",
            "itemtype": "method",
            "name": "_renderTooltip",
            "class": "TerminalDDGroups",
            "module": "terminal-ddgroups"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 28,
            "description": "Sets the terminal editable",
            "itemtype": "attribute",
            "name": "editable",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 36,
            "itemtype": "attribute",
            "name": "graphic",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 43,
            "itemtype": "attribute",
            "name": "alwaysSrc",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 53,
            "itemtype": "method",
            "name": "_renderUIdragedit",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 84,
            "itemtype": "method",
            "name": "_bindUIdragedit",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 99,
            "description": "on drag start, create the wire between 2 fake terminals",
            "itemtype": "method",
            "name": "_onDragEditStart",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 143,
            "description": "Update the position of the fake target and redraw the wire",
            "itemtype": "method",
            "name": "_onDragEditDrag",
            "access": "private",
            "tagname": "",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 154,
            "description": "on drop hit, set the wire src and tgt terminals",
            "itemtype": "method",
            "name": "_onDragEditDrophit",
            "access": "private",
            "tagname": "",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 181,
            "description": "on drop miss, destroy the wire",
            "itemtype": "method",
            "name": "_onDragEditDropmiss",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 190,
            "itemtype": "method",
            "name": "_onDragEditEnter",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 204,
            "itemtype": "method",
            "name": "_onDragEditExit",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 212,
            "itemtype": "method",
            "name": "isValidWireTerminal",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-dragedit/js/terminal-dragedit.js",
            "line": 224,
            "itemtype": "method",
            "name": "destructor",
            "class": "TerminalDragEdit",
            "module": "terminal-dragedit"
        },
        {
            "file": "src/terminal-input/js/terminal-input.js",
            "line": 19,
            "itemtype": "attribute",
            "name": "nMaxWires",
            "description": "maximum number of wires for this terminal",
            "type": "Integer",
            "default": "1",
            "class": "TerminalInput",
            "module": "terminal-input"
        },
        {
            "file": "src/terminal-input/js/terminal-input.js",
            "line": 27,
            "itemtype": "attribute",
            "name": "ddConfig",
            "description": "configuration of the Y.TerminalProxy object",
            "type": "Object",
            "default": "{ type: \"input\", allowedTypes: [\"output\"] }",
            "class": "TerminalInput",
            "module": "terminal-input"
        },
        {
            "file": "src/terminal-output/js/terminal-output.js",
            "line": 19,
            "itemtype": "attribute",
            "name": "direction",
            "description": "direction vector of the wires when connected to this terminal",
            "type": "Array",
            "default": "[0,1]",
            "class": "TerminalOutput",
            "module": "terminal-output"
        },
        {
            "file": "src/terminal-output/js/terminal-output.js",
            "line": 27,
            "itemtype": "attribute",
            "name": "fakeDirection",
            "description": "direction vector of the \"editing\" wire when it started from this terminal",
            "type": "Array",
            "default": "[0,-1]",
            "class": "TerminalOutput",
            "module": "terminal-output"
        },
        {
            "file": "src/terminal-output/js/terminal-output.js",
            "line": 35,
            "itemtype": "attribute",
            "name": "ddConfig",
            "description": "configuration of the Y.TerminalProxy object",
            "type": "Object",
            "default": "{ type: \"output\", allowedTypes: [\"input\"] }",
            "class": "TerminalOutput",
            "module": "terminal-output"
        },
        {
            "file": "src/terminal-output/js/terminal-output.js",
            "line": 43,
            "itemtype": "attribute",
            "name": "alwaysSrc",
            "description": "forces this terminal to be the src terminal in the wire config",
            "type": "Boolean",
            "default": "true",
            "class": "TerminalOutput",
            "module": "terminal-output"
        },
        {
            "file": "src/terminal-scissors/js/terminal-scissors.js",
            "line": 21,
            "itemtype": "method",
            "name": "_renderUIScissors",
            "access": "private",
            "tagname": "",
            "class": "TerminalScissors",
            "module": "terminal-scissors"
        },
        {
            "file": "src/terminal-scissors/js/terminal-scissors.js",
            "line": 31,
            "itemtype": "method",
            "name": "_bindUIScissors",
            "access": "private",
            "tagname": "",
            "class": "TerminalScissors",
            "module": "terminal-scissors"
        },
        {
            "file": "src/terminal-scissors/js/terminal-scissors.js",
            "line": 41,
            "itemtype": "method",
            "name": "_renderScissors",
            "access": "private",
            "tagname": "",
            "class": "TerminalScissors",
            "module": "terminal-scissors"
        },
        {
            "file": "src/textarea-container/js/textarea-container.js",
            "line": 33,
            "description": "Value of the textarea",
            "itemtype": "attribute",
            "name": "value",
            "class": "TextareaContainer",
            "module": "textarea-container"
        },
        {
            "file": "src/textarea-container/js/textarea-container.js",
            "line": 47,
            "description": "Keep to render the textarea",
            "itemtype": "attribute",
            "name": "bodyContent",
            "class": "TextareaContainer",
            "module": "textarea-container"
        },
        {
            "file": "src/widget-icons/js/widget-icons.js",
            "line": 18,
            "description": "Set of icons",
            "itemtype": "attribute",
            "name": "icons",
            "class": "WidgetIcons",
            "module": "widget-icons"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 27,
            "description": "Notify the WiresDeletates through addWire",
            "itemtype": "method",
            "name": "initializer",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 55,
            "itemtype": "method",
            "name": "bindUI",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 74,
            "description": "call removeWire on WiringsDelegate",
            "itemtype": "method",
            "name": "destroy",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 92,
            "description": "Drawing method. Meant to be overriden by a plugin",
            "itemtype": "method",
            "name": "_draw",
            "access": "private",
            "tagname": "",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 116,
            "itemtype": "attribute",
            "name": "src",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 138,
            "itemtype": "attribute",
            "name": "tgt",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 162,
            "itemtype": "attribute",
            "name": "srcDir",
            "type": "Array",
            "default": "[1,0]",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wire-base/js/wire-base.js",
            "line": 174,
            "description": "TODO: normalize ?",
            "itemtype": "attribute",
            "name": "tgtDir",
            "type": "Array",
            "default": "-srcDir",
            "class": "WireBase",
            "module": "wire-base"
        },
        {
            "file": "src/wires-delegate/js/wires-delegate.js",
            "line": 45,
            "description": "Add a wire to this terminal.",
            "itemtype": "method",
            "name": "addWire",
            "params": [
                {
                    "name": "wire",
                    "description": "Wire instance to add",
                    "type": "Wire"
                }
            ],
            "class": "WiresDelegate",
            "module": "wires-delegate"
        },
        {
            "file": "src/wires-delegate/js/wires-delegate.js",
            "line": 58,
            "description": "When a wire is destroyed",
            "itemtype": "method",
            "name": "removeWire",
            "class": "WiresDelegate",
            "module": "wires-delegate"
        },
        {
            "file": "src/wires-delegate/js/wires-delegate.js",
            "line": 80,
            "description": "Remove all wires",
            "itemtype": "method",
            "name": "destroyWires",
            "class": "WiresDelegate",
            "module": "wires-delegate"
        },
        {
            "file": "src/wires-delegate/js/wires-delegate.js",
            "line": 94,
            "description": "Returns a list of all the terminals connected to this terminal through its wires.",
            "itemtype": "method",
            "name": "getConnected",
            "return": {
                "description": "List of all connected terminals",
                "type": "Array"
            },
            "class": "WiresDelegate",
            "module": "wires-delegate"
        },
        {
            "file": "src/wires-delegate/js/wires-delegate.js",
            "line": 109,
            "description": "Redraw all the wires connected to this terminal",
            "itemtype": "method",
            "name": "redrawAllWires",
            "class": "WiresDelegate",
            "module": "wires-delegate"
        }
    ]
}