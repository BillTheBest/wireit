<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	
   <span class="kd">var</span> <span class="nx">Event</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">,</span><span class="nx">lang</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">;</span>
	
<span class="c">/**</span>
<span class="c"> * Create a password field.</span>
<span class="c"> * @class inputEx.PasswordField</span>
<span class="c"> * @extends inputEx.StringField</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param {Object} options inputEx.Field options object</span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> *   &lt;li&gt;confirmPasswordField: the PasswordField instance to compare to when using 2 password fields for password creation (please use the setConfirmationField method)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;strengthIndicator: display a widget to indicate password strength (default false)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;capsLockWarning: display a warning if CapsLock is on (default false)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;confirm: id of the field to compare to&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>

<span class="c">/**</span>
<span class="c"> * Keep track of all instances, indexed by ids, for the password confirmation field</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">byId</span> <span class="o">=</span> <span class="p">{};</span> 

<span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">StringField</span><span class="o">,</span> <span class="p">{</span>
   
	<span class="c">/**</span>
<span class="c">	 * Add the password regexp, strengthIndicator, capsLockWarning</span>
<span class="c">	 * @param {Object} options Options object as passed to the constructor</span>
<span class="c">	 */</span>
	<span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
	   
   	<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">?</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">:</span> <span class="s2">&quot;inputEx-Field inputEx-PasswordField&quot;</span><span class="o">;</span>
	   
	   <span class="c">// Add the password regexp (overridable)</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">regexp</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">regexp</span> <span class="o">||</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">regexps</span><span class="p">.</span><span class="nx">password</span><span class="o">;</span>
	  
		<span class="c">// display a strength indicator</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">strengthIndicator</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">strengthIndicator</span><span class="p">)</span> <span class="o">?</span> <span class="kc">false</span> <span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">strengthIndicator</span><span class="o">;</span>
		
		<span class="c">// capsLockWarning</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">capsLockWarning</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">capsLockWarning</span><span class="p">)</span> <span class="o">?</span> <span class="kc">false</span> <span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">capsLockWarning</span><span class="o">;</span>
		
		<span class="c">// confirm option, pass the id of the password field to confirm</span>
		<span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">byId</span><span class="p">[</span><span class="nx">options</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
		<span class="kd">var</span> <span class="nx">passwordField</span><span class="o">;</span>
		<span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirm</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">passwordField</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">byId</span><span class="p">[</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirm</span><span class="p">])</span> <span class="p">)</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">setConfirmationField</span><span class="p">(</span><span class="nx">passwordField</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Set the el type to &#39;password&#39;</span>
<span class="c">	 */</span>
	<span class="nx">renderComponent</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   <span class="c">// IE doesn&#39;t want to set the &quot;type&quot; property to &#39;password&#39; if the node has a parent</span>
	   <span class="c">// even if the parent is not in the DOM yet !!</span>
	   
      <span class="c">// This element wraps the input node in a float: none div</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-StringField-wrapper&#39;</span><span class="p">});</span>
	      
		<span class="c">// Attributes of the input field</span>
	   <span class="kd">var</span> <span class="nx">attributes</span> <span class="o">=</span> <span class="p">{};</span>
	   <span class="nx">attributes</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;password&#39;</span><span class="o">;</span>
	   <span class="nx">attributes</span><span class="p">.</span><span class="nx">size</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">size</span><span class="o">;</span>
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span> <span class="nx">attributes</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span><span class="o">;</span>
	
	   <span class="c">// Create the node</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="o">,</span> <span class="nx">attributes</span><span class="p">);</span>
		
		<span class="c">//inputEx.PasswordField.byId</span>
		
		<span class="c">// Append it to the main element</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">);</span>
		
		<span class="c">// Caps lock warning</span>
		<span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">capsLockWarning</span><span class="p">)</span> <span class="p">{</span>
		   <span class="k">this</span><span class="p">.</span><span class="nx">capsLockWarning</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span><span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;capsLockWarning&#39;</span><span class="p">}</span><span class="o">,</span><span class="p">{</span><span class="nx">display</span><span class="o">:</span> <span class="s1">&#39;none&#39;</span><span class="p">}</span><span class="o">,</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">capslockWarning</span><span class="p">);</span>
		   <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">capsLockWarning</span><span class="p">);</span>
	   <span class="p">}</span>
	   
	   <span class="c">// Password strength indicator</span>
		<span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">strengthIndicator</span><span class="p">)</span> <span class="p">{</span>
		   <span class="k">this</span><span class="p">.</span><span class="nx">strengthEl</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-Password-StrengthIndicator&#39;</span><span class="p">}</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">passwordStrength</span><span class="p">);</span>
		   <span class="k">this</span><span class="p">.</span><span class="nx">strengthBlocks</span> <span class="o">=</span> <span class="p">[];</span>
		   <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">4</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		      <span class="k">this</span><span class="p">.</span><span class="nx">strengthBlocks</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-Password-StrengthIndicatorBlock&#39;</span><span class="p">});</span>
		      <span class="k">this</span><span class="p">.</span><span class="nx">strengthEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">strengthBlocks</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">);</span>
		   <span class="p">}</span>
		   <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">strengthEl</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Set this field as the confirmation for the targeted password field:</span>
<span class="c">	 * @param {inputEx.PasswordField} passwordField The target password field</span>
<span class="c">	 */</span>
	<span class="nx">setConfirmationField</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">passwordField</span><span class="p">)</span> <span class="p">{</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirmPasswordField</span> <span class="o">=</span> <span class="nx">passwordField</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalid</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalidPasswordConfirmation</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirmPasswordField</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirmationPasswordField</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * The validation adds the confirmation password field support</span>
<span class="c">	 */</span>
	<span class="nx">validate</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirmPasswordField</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirmPasswordField</span><span class="p">.</span><span class="nx">getValue</span><span class="p">()</span> <span class="o">!=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getValue</span><span class="p">()</span> <span class="p">)</span> <span class="p">{</span>
	         <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
	      <span class="p">}</span>
	   <span class="p">}</span>
	   <span class="k">return</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">validate</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Change the state string</span>
<span class="c">	 */</span>
	<span class="nx">getStateString</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">state</span><span class="p">)</span> <span class="p">{</span>
	   <span class="k">if</span><span class="p">(</span><span class="nx">state</span> <span class="o">==</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">stateInvalid</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minLength</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minLength</span><span class="p">)</span> <span class="p">{</span>  
	      <span class="k">return</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalidPassword</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minLength</span><span class="o">+</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalidPassword</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
      <span class="p">}</span>
	   <span class="k">return</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">StringField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">getStateString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">state</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Update the state of the confirmation field</span>
<span class="c">	 * @param {Event} e The original input event</span>
<span class="c">	 */</span>
	<span class="nx">onInput</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">onInput</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">e</span><span class="p">);</span>
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirmationPasswordField</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">confirmationPasswordField</span><span class="p">.</span><span class="nx">setClassFromState</span><span class="p">();</span>
	   <span class="p">}</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * callback to display the capsLockWarning</span>
<span class="c">	 */</span>
	<span class="nx">onKeyPress</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">onKeyPress</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">e</span><span class="p">);</span>
	   
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">capsLockWarning</span><span class="p">)</span> <span class="p">{</span>
         <span class="kd">var</span> <span class="nx">ev</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">?</span> <span class="nx">e</span> <span class="o">:</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="o">;</span>
         <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span><span class="o">;</span>
         <span class="p">}</span>
         <span class="kd">var</span> <span class="nx">targ</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span> <span class="o">?</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span> <span class="o">:</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">;</span>
      
         <span class="c">// get key pressed</span>
         <span class="kd">var</span> <span class="nx">which</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
         <span class="k">if</span> <span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">which</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">which</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">which</span><span class="o">;</span>
         <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">which</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">;</span>
         <span class="p">}</span>
         <span class="c">// get shift status</span>
         <span class="kd">var</span> <span class="nx">shift_status</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
         <span class="k">if</span> <span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">shift_status</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">;</span>
         <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">shift_status</span> <span class="o">=</span> <span class="o">!!</span><span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">modifiers</span> <span class="o">&amp;</span> <span class="mi">4</span><span class="p">);</span>
         <span class="p">}</span>
         <span class="kd">var</span> <span class="nx">displayWarning</span> <span class="o">=</span> <span class="p">((</span><span class="nx">which</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="nx">which</span> <span class="o">&lt;=</span>  <span class="mi">90</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">shift_status</span><span class="p">)</span> <span class="o">||</span>
                              <span class="p">((</span><span class="nx">which</span> <span class="o">&gt;=</span> <span class="mi">97</span> <span class="o">&amp;&amp;</span> <span class="nx">which</span> <span class="o">&lt;=</span> <span class="mi">122</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">shift_status</span><span class="p">);</span>
         <span class="k">this</span><span class="p">.</span><span class="nx">setCapsLockWarning</span><span class="p">(</span><span class="nx">displayWarning</span><span class="p">);</span>
      <span class="p">}</span>
      
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * onkeyup callback to update the strength indicator</span>
<span class="c">	 */</span>
	<span class="nx">onKeyUp</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
 	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">onKeyUp</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">e</span><span class="p">);</span>
       <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">strengthIndicator</span><span class="p">)</span> <span class="p">{</span>
          <span class="nx">lang</span><span class="p">.</span><span class="nx">later</span><span class="p">(</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">updateStrengthIndicator</span><span class="p">);</span>
       <span class="p">}</span>
     <span class="p">}</span><span class="o">,</span>
     
     <span class="c">/**</span>
<span class="c">      * Show or hide the caps lock warning given the status</span>
<span class="c">      */</span>
     <span class="nx">setCapsLockWarning</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">status</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">capsLockWarning</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="nx">status</span> <span class="o">?</span> <span class="s1">&#39;&#39;</span> <span class="o">:</span> <span class="s1">&#39;none&#39;</span><span class="o">;</span>
     <span class="p">}</span><span class="o">,</span>
     
     <span class="c">/**</span>
<span class="c">      * Update the strength indicator (called by onKeyPress)</span>
<span class="c">      */</span>
     <span class="nx">updateStrengthIndicator</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  	     <span class="kd">var</span> <span class="nx">strength</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">getPasswordStrength</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getValue</span><span class="p">());</span>
        <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">4</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
           <span class="kd">var</span> <span class="nx">on</span> <span class="o">=</span> <span class="p">(</span><span class="nx">strength</span> <span class="o">&gt;=</span> <span class="nx">i</span><span class="o">*</span><span class="mi">25</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">strength</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">);</span>
           <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">strengthBlocks</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">,</span><span class="s2">&quot;background-color&quot;</span><span class="o">,</span> <span class="nx">on</span> <span class="o">?</span> <span class="s2">&quot;#4AE817&quot;</span> <span class="o">:</span> <span class="s2">&quot;#FFFFFF&quot;</span><span class="p">);</span>
		  <span class="p">}</span>
     <span class="p">}</span>
   
	
<span class="p">});</span>

<span class="c">/**</span>
<span class="c"> * Return an integer within [0,100] that quantify the password strength</span>
<span class="c"> * Function taken from Mozilla Code: (changed a little bit the values)</span>
<span class="c"> * http://lxr.mozilla.org/seamonkey/source/security/manager/pki/resources/content/password.js</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="p">.</span><span class="nx">getPasswordStrength</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">pw</span><span class="p">)</span> <span class="p">{</span>
    <span class="c">// Here is how we weigh the quality of the password</span>
    <span class="c">// number of characters</span>
    <span class="c">// numbers</span>
    <span class="c">// non-alpha-numeric chars</span>
    <span class="c">// upper and lower case characters</span>

    <span class="c">//length of the password</span>
    <span class="kd">var</span> <span class="nx">pwlength</span><span class="o">=</span><span class="p">(</span><span class="nx">pw</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
    <span class="c">//if (pwlength&gt;5)</span>
    <span class="c">//     pwlength=5;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">pwlength</span><span class="o">&gt;</span><span class="mi">7</span><span class="p">)</span>
         <span class="nx">pwlength</span><span class="o">=</span><span class="mi">7</span><span class="o">;</span>

    <span class="c">//use of numbers in the password</span>
    <span class="kd">var</span> <span class="nx">numnumeric</span> <span class="o">=</span> <span class="nx">pw</span><span class="p">.</span><span class="nx">replace</span> <span class="p">(</span><span class="sr">/[0-9]/g</span><span class="o">,</span> <span class="s2">&quot;&quot;</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">numeric</span><span class="o">=</span><span class="p">(</span><span class="nx">pw</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">numnumeric</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">numeric</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">)</span>
        <span class="nx">numeric</span><span class="o">=</span><span class="mi">3</span><span class="o">;</span>

    <span class="c">//use of symbols in the password</span>
    <span class="kd">var</span> <span class="nx">symbols</span> <span class="o">=</span> <span class="nx">pw</span><span class="p">.</span><span class="nx">replace</span> <span class="p">(</span><span class="sr">/\W/g</span><span class="o">,</span> <span class="s2">&quot;&quot;</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">numsymbols</span><span class="o">=</span><span class="p">(</span><span class="nx">pw</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">symbols</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">numsymbols</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">)</span>
        <span class="nx">numsymbols</span><span class="o">=</span><span class="mi">3</span><span class="o">;</span>

    <span class="c">//use of uppercase in the password</span>
    <span class="kd">var</span> <span class="nx">numupper</span> <span class="o">=</span> <span class="nx">pw</span><span class="p">.</span><span class="nx">replace</span> <span class="p">(</span><span class="sr">/[A-Z]/g</span><span class="o">,</span> <span class="s2">&quot;&quot;</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">upper</span><span class="o">=</span><span class="p">(</span><span class="nx">pw</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">numupper</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">upper</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">)</span>
        <span class="nx">upper</span><span class="o">=</span><span class="mi">3</span><span class="o">;</span>

    <span class="c">//var pwstrength=((pwlength*10)-20) + (numeric*10) + (numsymbols*15) + (upper*10);</span>
    <span class="kd">var</span> <span class="nx">pwstrength</span><span class="o">=</span><span class="p">((</span><span class="nx">pwlength</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span><span class="o">-</span><span class="mi">20</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="nx">numeric</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="nx">numsymbols</span><span class="o">*</span><span class="mi">20</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="nx">upper</span><span class="o">*</span><span class="mi">10</span><span class="p">);</span>

    <span class="c">// make sure we&#39;re give a value between 0 and 100</span>
    <span class="k">if</span> <span class="p">(</span> <span class="nx">pwstrength</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">)</span> <span class="p">{</span> <span class="nx">pwstrength</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span> <span class="nx">pwstrength</span> <span class="o">&gt;</span> <span class="mi">100</span> <span class="p">)</span> <span class="p">{</span> <span class="nx">pwstrength</span> <span class="o">=</span> <span class="mi">100</span><span class="o">;</span><span class="p">}</span>
    <span class="k">return</span> <span class="nx">pwstrength</span><span class="o">;</span>
<span class="p">};</span>

	
<span class="c">// Specific message for the password field</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalidPassword</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;The password schould contain at least &quot;</span><span class="o">,</span><span class="s2">&quot; numbers or characters&quot;</span><span class="p">];</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalidPasswordConfirmation</span> <span class="o">=</span> <span class="s2">&quot;Passwords are different !&quot;</span><span class="o">;</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">capslockWarning</span> <span class="o">=</span> <span class="s2">&quot;Warning: CapsLock is on&quot;</span><span class="o">;</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">passwordStrength</span> <span class="o">=</span> <span class="s2">&quot;Password Strength&quot;</span><span class="o">;</span>

<span class="c">// Register this class as &quot;password&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;password&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">PasswordField</span><span class="o">,</span> <span class="p">[</span>
   <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;boolean&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;Strength indicator&#39;</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;strengthIndicator&#39;</span><span class="o">,</span> <span class="nx">value</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}</span><span class="o">,</span>
   <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;boolean&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;CapsLock warning&#39;</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;capsLockWarning&#39;</span><span class="o">,</span> <span class="nx">value</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}</span>
<span class="p">]);</span>
	
<span class="p">})();</span>
</pre></div>
