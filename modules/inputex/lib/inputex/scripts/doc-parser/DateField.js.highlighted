<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>	
   <span class="kd">var</span> <span class="nx">lang</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">,</span> <span class="nx">Event</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">,</span> <span class="nx">Dom</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="o">;</span>
<span class="c">/**</span>
<span class="c"> * A Date Field. </span>
<span class="c"> * @class inputEx.DateField</span>
<span class="c"> * @extends inputEx.StringField</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param {Object} options Add the folowing options: </span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> *	   &lt;li&gt;dateFormat: Editor format (the one which is presented to the user) default to &#39;m/d/Y&#39;&lt;/li&gt;</span>
<span class="c"> *		&lt;li&gt;valueFormat: if falsy, the field will return a javascript Date instance. Otherwise, this format will be used for input parsing/output formatting&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>
	
<span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">StringField</span><span class="o">,</span> <span class="p">{</span>
	<span class="c">/**</span>
<span class="c">	 * Adds the &#39;inputEx-DateField&#39; default className</span>
<span class="c">	 * @param {Object} options Options object as passed to the constructor</span>
<span class="c">	 */</span>
   <span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
   	<span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
   	
   	<span class="c">// Overwrite options</span>
   	<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">?</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">:</span> <span class="s1">&#39;inputEx-Field inputEx-DateField&#39;</span><span class="o">;</span>
   	<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalid</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalidDate</span> <span class="o">?</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">invalidDate</span> <span class="o">:</span> <span class="s2">&quot;Invalid date, ex: 03/27/2008&quot;</span><span class="o">;</span>
   	
   	<span class="c">// Added options</span>
   	<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span> <span class="o">||</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">defaultDateFormat</span><span class="o">;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">valueFormat</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">valueFormat</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Specific Date validation depending of the &#39;format&#39; option</span>
<span class="c">	 */</span>
	<span class="nx">validate</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="o">;</span>
	
		<span class="kd">var</span> <span class="nx">separator</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/[^Ymd ]/g</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
	   <span class="kd">var</span> <span class="nx">ladate</span> <span class="o">=</span> <span class="nx">value</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">separator</span><span class="p">);</span>
	   <span class="k">if</span><span class="p">(</span> <span class="nx">ladate</span><span class="p">.</span><span class="nx">length</span> <span class="o">!=</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span> <span class="p">}</span>
	   <span class="k">if</span> <span class="p">(</span> <span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">))</span> <span class="o">||</span> <span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">))</span> <span class="o">||</span> <span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">)))</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span> <span class="p">}</span>
	   <span class="kd">var</span> <span class="nx">formatSplit</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">separator</span><span class="p">);</span>
	   <span class="kd">var</span> <span class="nx">yearIndex</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;Y&#39;</span><span class="o">,</span><span class="nx">formatSplit</span><span class="p">);</span>
	   <span class="k">if</span> <span class="p">(</span><span class="nx">ladate</span><span class="p">[</span><span class="nx">yearIndex</span><span class="p">].</span><span class="nx">length</span><span class="o">!=</span><span class="mi">4</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span> <span class="p">}</span> <span class="c">// Avoid 3-digits years...</span>
	   <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="o">,</span><span class="nx">formatSplit</span><span class="p">)</span> <span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">);</span>
	   <span class="kd">var</span> <span class="nx">Y</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span><span class="nx">yearIndex</span><span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">);</span>
	   <span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="o">,</span><span class="nx">formatSplit</span><span class="p">)</span> <span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
	   <span class="kd">var</span> <span class="nx">unedate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">Y</span><span class="o">,</span><span class="nx">m</span><span class="o">,</span><span class="nx">d</span><span class="p">);</span>
	   <span class="kd">var</span> <span class="nx">annee</span> <span class="o">=</span> <span class="nx">unedate</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span>
	   <span class="k">return</span> <span class="p">((</span><span class="nx">unedate</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span> <span class="o">==</span> <span class="nx">d</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">unedate</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span> <span class="o">==</span> <span class="nx">m</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">annee</span> <span class="o">==</span> <span class="nx">Y</span><span class="p">));</span>
	<span class="p">}</span><span class="o">,</span>
	
	   
	<span class="c">/**</span>
<span class="c">	 * Format the date according to options.dateFormat</span>
<span class="c">	 * @param {Date} val Date to set</span>
<span class="c">	 * @param {boolean} [sendUpdatedEvt] (optional) Wether this setValue should fire the updatedEvt or not (default is true, pass false to NOT send the event)</span>
<span class="c">	 */</span>
	<span class="nx">setValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">val</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">)</span> <span class="p">{</span>
	
	   <span class="c">// Don&#39;t try to parse a date if there is no date</span>
	   <span class="k">if</span><span class="p">(</span> <span class="nx">val</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span> <span class="p">)</span> <span class="p">{</span>
	      <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setValue</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">);</span>
	      <span class="k">return</span><span class="o">;</span>
	   <span class="p">}</span>
	   <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="o">;</span>
	   <span class="k">if</span> <span class="p">(</span><span class="nx">val</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">str</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">formatDate</span><span class="p">(</span><span class="nx">val</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">);</span>
	   <span class="p">}</span> 
		<span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">valueFormat</span><span class="p">){</span>
			<span class="kd">var</span> <span class="nx">dateVal</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">parseWithFormat</span><span class="p">(</span><span class="nx">val</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">valueFormat</span><span class="p">);</span>
			<span class="nx">str</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">formatDate</span><span class="p">(</span><span class="nx">dateVal</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">);</span>
		<span class="p">}</span>
	   <span class="c">// else date must match this.options.dateFormat</span>
	   <span class="k">else</span> <span class="p">{</span>
	     <span class="nx">str</span> <span class="o">=</span> <span class="nx">val</span><span class="o">;</span>
	   <span class="p">}</span>
	
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setValue</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">str</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Return the date</span>
<span class="c">	 * @param {Boolean} forceDate Skip the valueFormat option if set to truthy</span>
<span class="c">	 * @return {String || Date} Formatted date using the valueFormat or a javascript Date instance</span>
<span class="c">	 */</span>
	<span class="nx">getValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">forceDate</span><span class="p">)</span> <span class="p">{</span>
	   <span class="c">// let parent class function check if typeInvite, etc...</span>
	   <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">getValue</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>

	   <span class="c">// Hack to validate if field not required and empty</span>
	   <span class="k">if</span> <span class="p">(</span><span class="nx">value</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="o">;</span><span class="p">}</span>
	
		<span class="kd">var</span> <span class="nx">finalDate</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">parseWithFormat</span><span class="p">(</span><span class="nx">value</span><span class="o">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">);</span>
	
		<span class="c">// if valueFormat is specified, we format the string</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">forceDate</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">valueFormat</span><span class="p">){</span>	
			<span class="k">return</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">formatDate</span><span class="p">(</span><span class="nx">finalDate</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">valueFormat</span><span class="p">);</span>
		<span class="p">}</span> 
		
		<span class="k">return</span> <span class="nx">finalDate</span><span class="o">;</span>
	<span class="p">}</span>

<span class="p">});</span>

<span class="c">/**</span>
<span class="c"> * Those methods are limited but largely enough for our usage</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">parseWithFormat</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">sDate</span><span class="o">,</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">separator</span> <span class="o">=</span> <span class="nx">format</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/[^Ymd ]/g</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
	<span class="kd">var</span> <span class="nx">ladate</span> <span class="o">=</span> <span class="nx">sDate</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">separator</span><span class="p">);</span>
   <span class="kd">var</span> <span class="nx">formatSplit</span> <span class="o">=</span> <span class="nx">format</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">separator</span><span class="p">);</span>
   <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="o">,</span><span class="nx">formatSplit</span><span class="p">)</span> <span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">);</span>
   <span class="kd">var</span> <span class="nx">Y</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;Y&#39;</span><span class="o">,</span><span class="nx">formatSplit</span><span class="p">)</span> <span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">);</span>
   <span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">ladate</span><span class="p">[</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="o">,</span><span class="nx">formatSplit</span><span class="p">)</span> <span class="p">]</span><span class="o">,</span><span class="mi">10</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
   <span class="k">return</span> <span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">Y</span><span class="o">,</span><span class="nx">m</span><span class="o">,</span><span class="nx">d</span><span class="p">));</span>
<span class="p">};</span>

<span class="c">/**</span>
<span class="c"> * Those methods are limited but largely enough for our usage</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="p">.</span><span class="nx">formatDate</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="o">,</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="nx">format</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s1">&#39;Y&#39;</span><span class="o">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">());</span>
   <span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="nx">d</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
   <span class="nx">str</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="o">,</span> <span class="p">((</span><span class="nx">m</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span><span class="o">?</span> <span class="s1">&#39;0&#39;</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="p">);</span>
   <span class="kd">var</span> <span class="nx">day</span> <span class="o">=</span> <span class="nx">d</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span>
   <span class="nx">str</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="o">,</span> <span class="p">((</span><span class="nx">day</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span><span class="o">?</span> <span class="s1">&#39;0&#39;</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="nx">day</span><span class="p">);</span>
	<span class="k">return</span> <span class="nx">str</span><span class="o">;</span>
<span class="p">};</span>
	
<span class="c">// Specific message for the container</span>
<span class="c">// inputEx.messages.invalidDate = &quot;Invalid date, ex: 03/27/2008&quot;;</span>
	
<span class="c">// Register this class as &quot;date&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;date&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateField</span><span class="o">,</span> <span class="p">[</span>
   <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;select&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;Date format&#39;</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;dateFormat&#39;</span><span class="o">,</span> <span class="nx">selectOptions</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;m/d/Y&quot;</span><span class="o">,</span> <span class="s2">&quot;d/m/Y&quot;</span><span class="p">]</span><span class="o">,</span> <span class="nx">selectValues</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;m/d/Y&quot;</span><span class="o">,</span> <span class="s2">&quot;d/m/Y&quot;</span><span class="p">]</span> <span class="p">}</span>
<span class="p">]);</span>
	
<span class="p">})();</span>
</pre></div>
