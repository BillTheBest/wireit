<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	
   <span class="kd">var</span> <span class="nx">lang</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">,</span> <span class="nx">Event</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">,</span> <span class="nx">Dom</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="o">;</span>
	
<span class="c">/**</span>
<span class="c"> * Meta field to create a list of other fields</span>
<span class="c"> * @class inputEx.ListField</span>
<span class="c"> * @extends inputEx.Field</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param options Added options:</span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> *   &lt;li&gt;sortable: Add arrows to sort the items if true (default false)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;elementType: an element type definition (default is {type: &#39;string&#39;})&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;useButtons: use buttons instead of links (default false)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;unique: require values to be unique (default false)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;listAddLabel: if useButtons is false, text to add an item&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;listRemoveLabel: if useButtons is false, text to remove an item&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;maxItems: maximum number of items (leave undefined if no maximum, default)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;minItems: minimum number of items to validate (leave undefined if no minimum, default)&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">ListField</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	   
   <span class="c">/**</span>
<span class="c">    * List of all the subField instances</span>
<span class="c">    */</span>
   <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span> <span class="o">=</span> <span class="p">[];</span>
	   
   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">ListField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">ListField</span><span class="o">,</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">Field</span><span class="o">,</span> <span class="p">{</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Set the ListField classname</span>
<span class="c">	 * @param {Object} options Options object as passed to the constructor</span>
<span class="c">	 */</span>
	<span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">ListField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
	   
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">?</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">:</span> <span class="s1">&#39;inputEx-Field inputEx-ListField&#39;</span><span class="o">;</span>
	   
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">sortable</span> <span class="o">=</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">sortable</span><span class="p">)</span> <span class="o">?</span> <span class="kc">false</span> <span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">sortable</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">elementType</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">elementType</span> <span class="o">||</span> <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;string&#39;</span><span class="p">};</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span> <span class="o">=</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span><span class="p">)</span> <span class="o">?</span> <span class="kc">false</span> <span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">unique</span> <span class="o">=</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">unique</span><span class="p">)</span> <span class="o">?</span> <span class="kc">false</span> <span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">unique</span><span class="o">;</span>
	   
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listAddLabel</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">listAddLabel</span> <span class="o">||</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">listAddLink</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listRemoveLabel</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">listRemoveLabel</span> <span class="o">||</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">listRemoveLink</span><span class="o">;</span>
	   
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxItems</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">maxItems</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minItems</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">minItems</span><span class="o">;</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Render the addButton </span>
<span class="c">	 */</span>
	<span class="nx">renderComponent</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	      
	   <span class="c">// Add element button</span>
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">addButton</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;img&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">src</span><span class="o">:</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">spacerUrl</span><span class="o">,</span> <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-ListField-addButton&#39;</span><span class="p">});</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">addButton</span><span class="p">);</span>
      <span class="p">}</span>
	      
	   <span class="c">// List label</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;span&#39;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="p">{</span><span class="nx">marginLeft</span><span class="o">:</span> <span class="s2">&quot;4px&quot;</span><span class="p">}</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listLabel</span><span class="p">)</span> <span class="p">);</span>
	      
	   <span class="c">// Div element to contain the children</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">childContainer</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-ListField-childContainer&#39;</span><span class="p">});</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">childContainer</span><span class="p">);</span>
	   
	   <span class="c">// Add link</span>
	   <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">addButton</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-List-link&#39;</span><span class="p">}</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listAddLabel</span><span class="p">);</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">addButton</span><span class="p">);</span>
      <span class="p">}</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Handle the click event on the add button</span>
<span class="c">	 */</span>
	<span class="nx">initEvents</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   <span class="nx">Event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">addButton</span><span class="o">,</span> <span class="s1">&#39;click&#39;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onAddButton</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">    * Validate each field</span>
<span class="c">    * @returns {Boolean} true if all fields validate, required fields are not empty and unique constraint (if specified) is not violated</span>
<span class="c">    */</span>
   <span class="nx">validate</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

      <span class="kd">var</span> <span class="nx">response</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
      
      <span class="kd">var</span> <span class="nx">uniques</span> <span class="o">=</span> <span class="p">{};</span> <span class="c">// Hash for unique values option</span>
      <span class="kd">var</span> <span class="nx">l</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span>

      <span class="c">// Validate maxItems / minItems</span>
      <span class="k">if</span><span class="p">(</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minItems</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">l</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minItems</span>  <span class="p">)</span> <span class="p">{</span>
         <span class="nx">response</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
      <span class="p">}</span>
      <span class="k">if</span><span class="p">(</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxItems</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">l</span> <span class="o">&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxItems</span>  <span class="p">)</span> <span class="p">{</span>
         <span class="nx">response</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
      <span class="p">}</span>

      <span class="c">// Validate all the sub fields</span>
      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">l</span> <span class="o">&amp;&amp;</span> <span class="nx">response</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
         <span class="kd">var</span> <span class="nx">input</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
         <span class="nx">input</span><span class="p">.</span><span class="nx">setClassFromState</span><span class="p">();</span> <span class="c">// update field classes (mark invalid fields...)</span>
         <span class="kd">var</span> <span class="nx">state</span> <span class="o">=</span> <span class="nx">input</span><span class="p">.</span><span class="nx">getState</span><span class="p">();</span>
         <span class="k">if</span><span class="p">(</span> <span class="nx">state</span> <span class="o">==</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">stateRequired</span> <span class="o">||</span> <span class="nx">state</span> <span class="o">==</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">stateInvalid</span> <span class="p">)</span> <span class="p">{</span>
            <span class="nx">response</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span> <span class="c">// but keep looping on fields to set classes</span>
         <span class="p">}</span>
         <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">unique</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">hash</span> <span class="o">=</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">dump</span><span class="p">(</span><span class="nx">input</span><span class="p">.</span><span class="nx">getValue</span><span class="p">());</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">uniques</span><span class="p">[</span><span class="nx">hash</span><span class="p">])</span> <span class="p">{</span>
               <span class="nx">response</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>    <span class="c">// not unique</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
               <span class="nx">uniques</span><span class="p">[</span><span class="nx">hash</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="p">}</span>
          <span class="p">}</span>
      <span class="p">}</span>
      <span class="k">return</span> <span class="nx">response</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Set the value of all the subfields</span>
<span class="c">	 * @param {Array} value The list of values to set</span>
<span class="c">	 * @param {boolean} [sendUpdatedEvt] (optional) Wether this setValue should fire the updatedEvt or not (default is true, pass false to NOT send the event)</span>
<span class="c">	 */</span>
	<span class="nx">setValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">)</span> <span class="p">{</span>
	   
	   <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
	      <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;inputEx.ListField.setValue expected an array, got &quot;</span><span class="o">+</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">value</span><span class="p">));</span>
	   <span class="p">}</span>
	      
	   <span class="c">// Set the values (and add the lines if necessary)</span>
	   <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="o">==</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="p">{</span>
	         <span class="k">this</span><span class="p">.</span><span class="nx">addElement</span><span class="p">(</span><span class="nx">value</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
	      <span class="p">}</span>
	      <span class="k">else</span> <span class="p">{</span>
	         <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">value</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">,</span> <span class="kc">false</span><span class="p">);</span>
	      <span class="p">}</span>
	   <span class="p">}</span>
	      
	   <span class="c">// Remove additional subFields</span>
	   <span class="kd">var</span> <span class="nx">additionalElements</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span>
	   <span class="k">if</span><span class="p">(</span><span class="nx">additionalElements</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">additionalElements</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span> 
	         <span class="k">this</span><span class="p">.</span><span class="nx">removeElement</span><span class="p">(</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
	      <span class="p">}</span>
	   <span class="p">}</span>
	   
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">ListField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setValue</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">value</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Return the array of values</span>
<span class="c">	 * @return {Array} The array</span>
<span class="c">	 */</span>
	<span class="nx">getValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   <span class="kd">var</span> <span class="nx">values</span> <span class="o">=</span> <span class="p">[];</span>
	   <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">length</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
	      <span class="nx">values</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getValue</span><span class="p">();</span>
	   <span class="p">}</span>
	   <span class="k">return</span> <span class="nx">values</span><span class="o">;</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Adds an element</span>
<span class="c">	 * @param {Any} The initial value of the subfield to create</span>
<span class="c">	 * @return {inputEx.Field} SubField added instance</span>
<span class="c">	 */</span>
	<span class="nx">addElement</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
	
	   <span class="c">// Render the subField</span>
	   <span class="kd">var</span> <span class="nx">subFieldEl</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderSubField</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>
	      
	   <span class="c">// Adds it to the local list</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">subFieldEl</span><span class="p">);</span>
	   
	   <span class="k">return</span> <span class="nx">subFieldEl</span><span class="o">;</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Add a new element to the list and fire updated event</span>
<span class="c">	 * @param {Event} e The original click event</span>
<span class="c">	 */</span>
	<span class="nx">onAddButton</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	   <span class="nx">Event</span><span class="p">.</span><span class="nx">stopEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
	   
	   <span class="c">// Prevent adding a new field if already at maxItems</span>
	   <span class="k">if</span><span class="p">(</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxItems</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxItems</span> <span class="p">)</span> <span class="p">{</span>
	      <span class="k">return</span><span class="o">;</span>
	   <span class="p">}</span>
	   
	   <span class="c">// Add a field with no value: </span>
	   <span class="kd">var</span> <span class="nx">subFieldEl</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">addElement</span><span class="p">();</span>
	   
	   <span class="c">// Focus on this field</span>
	   <span class="nx">subFieldEl</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
	   
	   <span class="c">// Fire updated !</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">fireUpdatedEvt</span><span class="p">();</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Adds a new line to the List Field</span>
<span class="c"> 	 * @param {Any} The initial value of the subfield to create</span>
<span class="c">	 * @return  {inputEx.Field} instance of the created field (inputEx.Field or derivative)</span>
<span class="c">	 */</span>
	<span class="nx">renderSubField</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
	      
	   <span class="c">// Div that wraps the deleteButton + the subField</span>
	   <span class="kd">var</span> <span class="nx">newDiv</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="p">)</span><span class="o">,</span> <span class="nx">delButton</span><span class="o">;</span>
	      
	   <span class="c">// Delete button</span>
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span><span class="p">)</span> <span class="p">{</span>
	      <span class="nx">delButton</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;img&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">src</span><span class="o">:</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">spacerUrl</span><span class="o">,</span> <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-ListField-delButton&#39;</span><span class="p">});</span>
	      <span class="nx">Event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span> <span class="nx">delButton</span><span class="o">,</span> <span class="s1">&#39;click&#39;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onDelete</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	      <span class="nx">newDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="nx">delButton</span> <span class="p">);</span>
      <span class="p">}</span>
	      
	   <span class="c">// Instantiate the new subField</span>
	   <span class="kd">var</span> <span class="nx">opts</span> <span class="o">=</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">merge</span><span class="p">({}</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">elementType</span><span class="p">);</span>
	   
	   <span class="c">// Retro-compatibility with deprecated inputParams Object : TODO -&gt; remove</span>
      <span class="k">if</span><span class="p">(</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">opts</span><span class="p">.</span><span class="nx">inputParams</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">value</span><span class="p">))</span> <span class="p">{</span>
         <span class="nx">opts</span><span class="p">.</span><span class="nx">inputParams</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">value</span><span class="o">;</span>
         
      <span class="c">// New prefered way to set options of a field</span>
      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">value</span><span class="p">))</span> <span class="p">{</span>
         <span class="nx">opts</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">value</span><span class="o">;</span>
      <span class="p">}</span>
	   
	   <span class="kd">var</span> <span class="nx">el</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">(</span><span class="nx">opts</span><span class="o">,</span><span class="k">this</span><span class="p">);</span>
	   
	   <span class="kd">var</span> <span class="nx">subFieldEl</span> <span class="o">=</span> <span class="nx">el</span><span class="p">.</span><span class="nx">getEl</span><span class="p">();</span>
	   <span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="nx">subFieldEl</span><span class="o">,</span> <span class="s1">&#39;margin-left&#39;</span><span class="o">,</span> <span class="s1">&#39;4px&#39;</span><span class="p">);</span>
	   <span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="nx">subFieldEl</span><span class="o">,</span> <span class="s1">&#39;float&#39;</span><span class="o">,</span> <span class="s1">&#39;left&#39;</span><span class="p">);</span>
	   <span class="nx">newDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="nx">subFieldEl</span> <span class="p">);</span>
	   
	   <span class="c">// Subscribe the onChange event to resend it </span>
	   <span class="nx">el</span><span class="p">.</span><span class="nx">updatedEvt</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onChange</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	
	   <span class="c">// Arrows to order:</span>
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">sortable</span><span class="p">)</span> <span class="p">{</span>
	      <span class="kd">var</span> <span class="nx">arrowUp</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-ListField-Arrow inputEx-ListField-ArrowUp&#39;</span><span class="p">});</span>
	      <span class="nx">Event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="nx">arrowUp</span><span class="o">,</span> <span class="s1">&#39;click&#39;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onArrowUp</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	      <span class="kd">var</span> <span class="nx">arrowDown</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-ListField-Arrow inputEx-ListField-ArrowDown&#39;</span><span class="p">});</span>
	      <span class="nx">Event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="nx">arrowDown</span><span class="o">,</span> <span class="s1">&#39;click&#39;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onArrowDown</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	      <span class="nx">newDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="nx">arrowUp</span> <span class="p">);</span>
	      <span class="nx">newDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="nx">arrowDown</span> <span class="p">);</span>
	   <span class="p">}</span>
	   
	   <span class="c">// Delete link</span>
	   <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span><span class="p">)</span> <span class="p">{</span>
	      <span class="nx">delButton</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-List-link&#39;</span><span class="p">}</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listRemoveLabel</span><span class="p">);</span>
	      <span class="nx">Event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span> <span class="nx">delButton</span><span class="o">,</span> <span class="s1">&#39;click&#39;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onDelete</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	      <span class="nx">newDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="nx">delButton</span> <span class="p">);</span>
      <span class="p">}</span>
	
	   <span class="c">// Line breaker</span>
	   <span class="nx">newDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="p">{</span><span class="nx">clear</span><span class="o">:</span> <span class="s2">&quot;both&quot;</span><span class="p">})</span> <span class="p">);</span>
	
	   <span class="k">this</span><span class="p">.</span><span class="nx">childContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">newDiv</span><span class="p">);</span>
	      
	   <span class="k">return</span> <span class="nx">el</span><span class="o">;</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Switch a subField with its previous one</span>
<span class="c">	 * Called when the user clicked on the up arrow of a sortable list</span>
<span class="c">	 * @param {Event} e Original click event</span>
<span class="c">	 */</span>
	<span class="nx">onArrowUp</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	   <span class="kd">var</span> <span class="nx">childElement</span> <span class="o">=</span> <span class="nx">Event</span><span class="p">.</span><span class="nx">getTarget</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">parentNode</span><span class="o">;</span>
	   
	   <span class="kd">var</span> <span class="nx">previousChildNode</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
	   <span class="kd">var</span> <span class="nx">nodeIndex</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
	   <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">childElement</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
	      <span class="kd">var</span> <span class="nx">el</span><span class="o">=</span><span class="nx">childElement</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
	      <span class="k">if</span><span class="p">(</span><span class="nx">el</span> <span class="o">==</span> <span class="nx">childElement</span><span class="p">)</span> <span class="p">{</span>
	         <span class="nx">previousChildNode</span> <span class="o">=</span> <span class="nx">childElement</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
	         <span class="nx">nodeIndex</span> <span class="o">=</span> <span class="nx">i</span><span class="o">;</span>
	         <span class="k">break</span><span class="o">;</span>
	      <span class="p">}</span>
	   <span class="p">}</span>
	   
	   <span class="k">if</span><span class="p">(</span><span class="nx">previousChildNode</span><span class="p">)</span> <span class="p">{</span>
	      <span class="c">// Remove the line</span>
	      <span class="kd">var</span> <span class="nx">removedEl</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">childContainer</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">childElement</span><span class="p">);</span>
	      
	      <span class="c">// Adds it before the previousChildNode</span>
	      <span class="kd">var</span> <span class="nx">insertedEl</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">childContainer</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">removedEl</span><span class="o">,</span> <span class="nx">previousChildNode</span><span class="p">);</span>
	      
	      <span class="c">// Swap this.subFields elements (i,i-1)</span>
	      <span class="kd">var</span> <span class="nx">temp</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="p">];</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="p">]</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nx">temp</span><span class="o">;</span>
	      
	      <span class="c">// Color Animation</span>
	      <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">)</span> <span class="p">{</span>
	         <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">.</span><span class="nx">stop</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
	      <span class="p">}</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ColorAnim</span><span class="p">(</span><span class="nx">insertedEl</span><span class="o">,</span> <span class="p">{</span><span class="nx">backgroundColor</span><span class="o">:</span> <span class="p">{</span> <span class="nx">from</span><span class="o">:</span> <span class="s1">&#39;#eeee33&#39;</span> <span class="o">,</span> <span class="nx">to</span><span class="o">:</span> <span class="s1">&#39;#eeeeee&#39;</span> <span class="p">}}</span><span class="o">,</span> <span class="mf">0.4</span><span class="p">);</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">.</span><span class="nx">onComplete</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="nx">insertedEl</span><span class="o">,</span> <span class="s1">&#39;background-color&#39;</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="p">});</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">.</span><span class="nx">animate</span><span class="p">();</span>
	      
	      <span class="c">// Fire updated !</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">fireUpdatedEvt</span><span class="p">();</span>
	   <span class="p">}</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Switch a subField with its next one</span>
<span class="c">	 * Called when the user clicked on the down arrow of a sortable list</span>
<span class="c">	 * @param {Event} e Original click event</span>
<span class="c">	 */</span>
	<span class="nx">onArrowDown</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	   <span class="kd">var</span> <span class="nx">childElement</span> <span class="o">=</span> <span class="nx">Event</span><span class="p">.</span><span class="nx">getTarget</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">parentNode</span><span class="o">;</span>
	   
	   <span class="kd">var</span> <span class="nx">nodeIndex</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
	   <span class="kd">var</span> <span class="nx">nextChildNode</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
	   <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">childElement</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
	      <span class="kd">var</span> <span class="nx">el</span><span class="o">=</span><span class="nx">childElement</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
	      <span class="k">if</span><span class="p">(</span><span class="nx">el</span> <span class="o">==</span> <span class="nx">childElement</span><span class="p">)</span> <span class="p">{</span>
	         <span class="nx">nextChildNode</span> <span class="o">=</span> <span class="nx">childElement</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
	         <span class="nx">nodeIndex</span> <span class="o">=</span> <span class="nx">i</span><span class="o">;</span>
	         <span class="k">break</span><span class="o">;</span>
	      <span class="p">}</span>
	   <span class="p">}</span>
	   
	   <span class="k">if</span><span class="p">(</span><span class="nx">nextChildNode</span><span class="p">)</span> <span class="p">{</span>
	      <span class="c">// Remove the line</span>
	      <span class="kd">var</span> <span class="nx">removedEl</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">childContainer</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">childElement</span><span class="p">);</span>
	      <span class="c">// Adds it after the nextChildNode</span>
	      <span class="kd">var</span> <span class="nx">insertedEl</span> <span class="o">=</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">removedEl</span><span class="o">,</span> <span class="nx">nextChildNode</span><span class="p">);</span>
	      
	      <span class="c">// Swap this.subFields elements (i,i+1)</span>
	      <span class="kd">var</span> <span class="nx">temp</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="p">];</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="p">]</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">nodeIndex</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nx">temp</span><span class="o">;</span>
	      
	      <span class="c">// Color Animation</span>
	      <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">)</span> <span class="p">{</span>
	         <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">.</span><span class="nx">stop</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
	      <span class="p">}</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ColorAnim</span><span class="p">(</span><span class="nx">insertedEl</span><span class="o">,</span> <span class="p">{</span><span class="nx">backgroundColor</span><span class="o">:</span> <span class="p">{</span> <span class="nx">from</span><span class="o">:</span> <span class="s1">&#39;#eeee33&#39;</span> <span class="o">,</span> <span class="nx">to</span><span class="o">:</span> <span class="s1">&#39;#eeeeee&#39;</span> <span class="p">}}</span><span class="o">,</span> <span class="mi">1</span><span class="p">);</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">.</span><span class="nx">onComplete</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="nx">insertedEl</span><span class="o">,</span> <span class="s1">&#39;background-color&#39;</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="p">});</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">arrowAnim</span><span class="p">.</span><span class="nx">animate</span><span class="p">();</span>
	      
	      <span class="c">// Fire updated !</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">fireUpdatedEvt</span><span class="p">();</span>
	   <span class="p">}</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Called when the user clicked on a delete button.</span>
<span class="c">	 * @param {Event} e The original click event</span>
<span class="c">	 */</span>
	<span class="nx">onDelete</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	      
	   <span class="nx">Event</span><span class="p">.</span><span class="nx">stopEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
	   
	   <span class="c">// Prevent removing a field if already at minItems</span>
	   <span class="k">if</span><span class="p">(</span> <span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minItems</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minItems</span> <span class="p">)</span> <span class="p">{</span>
	      <span class="k">return</span><span class="o">;</span>
	   <span class="p">}</span>
	      
	   <span class="c">// Get the wrapping div element</span>
	   <span class="kd">var</span> <span class="nx">elementDiv</span> <span class="o">=</span> <span class="nx">Event</span><span class="p">.</span><span class="nx">getTarget</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">parentNode</span><span class="o">;</span>
	   
	   <span class="c">// Get the index of the subField</span>
	   <span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
	   
	   <span class="kd">var</span> <span class="nx">subFieldEl</span> <span class="o">=</span> <span class="nx">elementDiv</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">useButtons</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">];</span>
	   <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">.</span><span class="nx">length</span> <span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getEl</span><span class="p">()</span> <span class="o">==</span> <span class="nx">subFieldEl</span><span class="p">)</span> <span class="p">{</span>
	         <span class="nx">index</span> <span class="o">=</span> <span class="nx">i</span><span class="o">;</span>
	         <span class="k">break</span><span class="o">;</span>
	      <span class="p">}</span>
	   <span class="p">}</span>
	      
	   <span class="c">// Remove it</span>
	   <span class="k">if</span><span class="p">(</span><span class="nx">index</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
	      <span class="k">this</span><span class="p">.</span><span class="nx">removeElement</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
	   <span class="p">}</span>
	      
	   <span class="c">// Fire the updated event</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">fireUpdatedEvt</span><span class="p">();</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Remove the line from the dom and the subField from the list.</span>
<span class="c">	 * @param {integer} index The index of the element to remove</span>
<span class="c">	 */</span>
	<span class="nx">removeElement</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
	   <span class="kd">var</span> <span class="nx">elementDiv</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">getEl</span><span class="p">().</span><span class="nx">parentNode</span><span class="o">;</span>
	      
	   <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">[</span><span class="nx">index</span><span class="p">]</span> <span class="o">=</span> <span class="kc">undefined</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">subFields</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">compactArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">subFields</span><span class="p">);</span>
	      
	   <span class="c">// Remove the element</span>
	   <span class="nx">elementDiv</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">elementDiv</span><span class="p">);</span>
	<span class="p">}</span>
	
<span class="p">});</span>
	
<span class="c">// Register this class as &quot;list&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;list&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">ListField</span><span class="o">,</span> <span class="p">[</span>
   <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;string&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;List label&#39;</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;listLabel&#39;</span><span class="o">,</span> <span class="nx">value</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">}</span><span class="o">,</span>
   <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;type&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;List element type&#39;</span><span class="o">,</span> <span class="nx">required</span><span class="o">:</span> <span class="kc">true</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;elementType&#39;</span> <span class="p">}</span>
<span class="p">]);</span>


<span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">listAddLink</span> <span class="o">=</span> <span class="s2">&quot;Add&quot;</span><span class="o">;</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">listRemoveLink</span> <span class="o">=</span> <span class="s2">&quot;remove&quot;</span><span class="o">;</span>
	
<span class="p">})();</span>
</pre></div>
