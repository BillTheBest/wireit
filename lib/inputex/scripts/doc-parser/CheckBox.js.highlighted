<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	
	<span class="kd">var</span> <span class="nx">lang</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">,</span> <span class="nx">Event</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">,</span> <span class="nx">Dom</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="o">;</span>
	
<span class="c">/**</span>
<span class="c"> * Create a checkbox.</span>
<span class="c"> * @class inputEx.CheckBox</span>
<span class="c"> * @extends inputEx.Field</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param {Object} options Added options for CheckBoxes:</span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> *   &lt;li&gt;sentValues: 2D vector of values for checked/unchecked states (default is [true, false])&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">CheckBox</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">inputEx</span><span class="p">.</span><span class="nx">CheckBox</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>
	
<span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">CheckBox</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">Field</span><span class="o">,</span> <span class="p">{</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Adds the CheckBox specific options</span>
<span class="c">	 * @param {Object} options Options object as passed to the constructor</span>
<span class="c">	 */</span>
	<span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">CheckBox</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
	   
	   <span class="c">// Overwrite options:</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">?</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">:</span> <span class="s1">&#39;inputEx-Field inputEx-CheckBox&#39;</span><span class="o">;</span>
	   
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rightLabel</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">rightLabel</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span><span class="o">;</span>
	   
	   <span class="c">// Added options</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">sentValues</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">sentValues</span> <span class="o">||</span> <span class="p">[</span><span class="kc">true</span><span class="o">,</span> <span class="kc">false</span><span class="p">];</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">sentValues</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">sentValues</span><span class="o">;</span> <span class="c">// for compatibility</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">checkedValue</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">sentValues</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">uncheckedValue</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">sentValues</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Render the checkbox and the hidden field</span>
<span class="c">	 */</span>
	<span class="nx">renderComponent</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	
   	<span class="kd">var</span> <span class="nx">checkBoxId</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">divEl</span><span class="p">.</span><span class="nx">id</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">divEl</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s1">&#39;-field&#39;</span><span class="o">:</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">generateId</span><span class="p">();</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="o">,</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">checkBoxId</span><span class="o">,</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;checkbox&#39;</span> <span class="p">});</span>

	   <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
	
	   <span class="k">this</span><span class="p">.</span><span class="nx">rightLabelEl</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;label&#39;</span><span class="o">,</span> <span class="p">{</span><span class="s2">&quot;for&quot;</span><span class="o">:</span> <span class="nx">checkBoxId</span><span class="o">,</span> <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-CheckBox-rightLabel&#39;</span><span class="p">}</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rightLabel</span><span class="p">);</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rightLabelEl</span><span class="p">);</span>
	
	   <span class="c">// Keep state of checkbox in a hidden field (format : this.checkedValue or this.uncheckedValue)</span>
	   <span class="c">// This is useful for non-javascript form submit (it allows custom checked/unchecked values to be submitted)</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">hiddenEl</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;hidden&#39;</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span><span class="o">,</span> <span class="nx">value</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">uncheckedValue</span><span class="p">});</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hiddenEl</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Clear the previous events and listen for the &quot;change&quot; event</span>
<span class="c">	 */</span>
	<span class="nx">initEvents</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   
	   <span class="c">// Awful Hack to work in IE6 and below (the checkbox doesn&#39;t fire the change event)</span>
	   <span class="c">// It seems IE 8 removed this behavior from IE7 so it only works with IE 7 ??</span>
	   <span class="c">/*if( YAHOO.env.ua.ie &amp;&amp; parseInt(YAHOO.env.ua.ie,10) != 7 ) {</span>
<span class="c">	      Event.addListener(this.el, &quot;click&quot;, function() { this.fireUpdatedEvt(); }, this, true);	</span>
<span class="c">	   }*/</span>
	   <span class="k">if</span><span class="p">(</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span> <span class="p">)</span> <span class="p">{</span>
	      <span class="nx">Event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="o">,</span> <span class="s2">&quot;click&quot;</span><span class="o">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">later</span><span class="p">(</span><span class="mi">10</span><span class="o">,</span><span class="k">this</span><span class="o">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onChange</span><span class="p">(</span><span class="nx">e</span><span class="p">);});</span> <span class="p">}</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>	
	   <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
	      <span class="nx">Event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="o">,</span> <span class="s2">&quot;change&quot;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onChange</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	   <span class="p">}</span>
	   
	   <span class="nx">Event</span><span class="p">.</span><span class="nx">addFocusListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onFocus</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	   <span class="nx">Event</span><span class="p">.</span><span class="nx">addBlurListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onBlur</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Function called when the checkbox is toggled</span>
<span class="c">	 * @param {Event} e The original &#39;change&#39; event</span>
<span class="c">	 */</span>
	<span class="nx">onChange</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">hiddenEl</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">checked</span> <span class="o">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">checkedValue</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">uncheckedValue</span><span class="o">;</span>
	
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">CheckBox</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">onChange</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">e</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Get the state value</span>
<span class="c">	 * @return {Any} one of [checkedValue,uncheckedValue]</span>
<span class="c">	 */</span>
	<span class="nx">getValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	      <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">checked</span> <span class="o">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">checkedValue</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">uncheckedValue</span><span class="o">;</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Set the value of the checkedbox</span>
<span class="c">	 * @param {Any} value The value schould be one of [checkedValue,uncheckedValue]</span>
<span class="c">    * @param {boolean} [sendUpdatedEvt] (optional) Wether this setValue should fire the updatedEvt or not (default is true, pass false to NOT send the event)</span>
<span class="c">	 */</span>
	<span class="nx">setValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">)</span> <span class="p">{</span>
	   <span class="k">if</span> <span class="p">(</span><span class="nx">value</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">checkedValue</span> <span class="o">||</span> <span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="o">==</span> <span class="s1">&#39;string&#39;</span> <span class="o">&amp;&amp;</span> <span class="k">typeof</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">checkedValue</span><span class="p">)</span> <span class="o">==</span> <span class="s1">&#39;boolean&#39;</span> <span class="o">&amp;&amp;</span>
		<span class="nx">value</span> <span class="o">===</span> <span class="nb">String</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">checkedValue</span><span class="p">)))</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">hiddenEl</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">checkedValue</span><span class="o">;</span>
			
			<span class="c">// check checkbox (all browsers)</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">checked</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
			
			<span class="c">// hacks for IE6, because input is not operational at init, </span>
			<span class="c">// so &quot;this.el.checked = true&quot; would work for default values !</span>
			<span class="c">// (but still work for later setValue calls)</span>
			<span class="k">if</span> <span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span> <span class="o">===</span> <span class="mi">6</span><span class="p">)</span> <span class="p">{</span>
			   <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;defaultChecked&quot;</span><span class="o">,</span><span class="s2">&quot;checked&quot;</span><span class="p">);</span> <span class="c">// for IE6</span>
		   <span class="p">}</span>
		<span class="p">}</span>
	   <span class="k">else</span> <span class="p">{</span>
	      <span class="c">// DEBUG :</span>
	      <span class="c">/*if (value!==this.uncheckedValue &amp;&amp; lang.isObject(console) &amp;&amp; lang.isFunction(console.log) ) {</span>
<span class="c">	         console.log(&quot;inputEx.CheckBox: value is *&quot;+value+&quot;*, schould be in [&quot;+this.checkedValue+&quot;,&quot;+this.uncheckedValue+&quot;]&quot;);</span>
<span class="c">         }*/</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">hiddenEl</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">uncheckedValue</span><span class="o">;</span>
			
			<span class="c">// uncheck checkbox (all browsers)</span>
		   <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">checked</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
		   
			<span class="c">// hacks for IE6, because input is not operational at init, </span>
			<span class="c">// so &quot;this.el.checked = false&quot; would work for default values !</span>
			<span class="c">// (but still work for later setValue calls)</span>
			<span class="k">if</span> <span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span> <span class="o">===</span> <span class="mi">6</span><span class="p">)</span> <span class="p">{</span>
			   <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;defaultChecked&quot;</span><span class="p">);</span> <span class="c">// for IE6</span>
		   <span class="p">}</span>
		<span class="p">}</span>
		
		<span class="c">// Call Field.setValue to set class and fire updated event</span>
		<span class="nx">inputEx</span><span class="p">.</span><span class="nx">CheckBox</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setValue</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">value</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">    * Disable the field</span>
<span class="c">    */</span>
   <span class="nx">disable</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">disabled</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>

   <span class="c">/**</span>
<span class="c">    * Enable the field</span>
<span class="c">    */</span>
   <span class="nx">enable</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">disabled</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
   <span class="p">}</span>
	
<span class="p">});</span>   
	
<span class="c">// Register this class as &quot;boolean&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;boolean&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">CheckBox</span><span class="o">,</span> <span class="p">[</span> 
   <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;string&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;Right Label&#39;</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;rightLabel&#39;</span><span class="p">}</span>
<span class="p">]);</span>
	
<span class="p">})();</span>
</pre></div>
