<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	
   <span class="kd">var</span> <span class="nx">lang</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">;</span>
	
<span class="c">/**</span>
<span class="c"> * Wrapper for the Rich Text Editor from YUI</span>
<span class="c"> * @class inputEx.RTEField</span>
<span class="c"> * @extends inputEx.Field</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param {Object} options Added options:</span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> *   &lt;li&gt;opts: the options to be added when calling the RTE constructor (see YUI RTE)&lt;/li&gt;</span>
<span class="c"> *   &lt;li&gt;editorType: if == &#39;simple&#39;, the field will use the SimpleEditor. Any other value will use the Editor class.&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEField</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEField</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">Field</span><span class="o">,</span> <span class="p">{</span>   
   <span class="c">/**</span>
<span class="c">    * Set the default values of the options</span>
<span class="c">    * @param {Object} options Options object as passed to the constructor</span>
<span class="c">    */</span>
  	<span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
  	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
  	   
  	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">opts</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">opts</span> <span class="o">||</span> <span class="p">{};</span>
  	   <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">editorType</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">editorType</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>
   
	<span class="c">/**</span>
<span class="c">	 * Render the field using the YUI Editor widget</span>
<span class="c">	 */</span>	
	<span class="nx">renderComponent</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEfieldsNumber</span><span class="p">)</span> <span class="p">{</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEfieldsNumber</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="p">}</span>
	   
	   <span class="kd">var</span> <span class="nx">id</span> <span class="o">=</span> <span class="s2">&quot;inputEx-RTEField-&quot;</span><span class="o">+</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEfieldsNumber</span><span class="o">;</span>
	   <span class="kd">var</span> <span class="nx">attributes</span> <span class="o">=</span> <span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">id</span><span class="p">};</span>
      <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span> <span class="nx">attributes</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span><span class="o">;</span> <span class="p">}</span>
      
	   <span class="k">this</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;textarea&#39;</span><span class="o">,</span> <span class="nx">attributes</span><span class="p">);</span>
	   
	   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEfieldsNumber</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
	
	   <span class="c">//This is the default config</span>
	   <span class="kd">var</span> <span class="nx">_def</span> <span class="o">=</span> <span class="p">{</span>
	       <span class="nx">height</span><span class="o">:</span> <span class="s1">&#39;300px&#39;</span><span class="o">,</span>
	       <span class="nx">width</span><span class="o">:</span> <span class="s1">&#39;580px&#39;</span><span class="o">,</span>
	       <span class="nx">dompath</span><span class="o">:</span> <span class="kc">true</span><span class="o">,</span>
	       <span class="nx">filterWord</span><span class="o">:</span><span class="kc">true</span> <span class="c">// get rid of the MS word junk</span>
	   <span class="p">};</span>
	   <span class="c">//The options object</span>
	   <span class="kd">var</span> <span class="nx">o</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">opts</span><span class="o">;</span>
	   <span class="c">//Walk it to set the new config object</span>
	   <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">o</span><span class="p">)</span> <span class="p">{</span>
	        <span class="k">if</span> <span class="p">(</span><span class="nx">lang</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">o</span><span class="o">,</span> <span class="nx">i</span><span class="p">))</span> <span class="p">{</span>
	            <span class="nx">_def</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
	        <span class="p">}</span>
	   <span class="p">}</span>
	   <span class="c">//Check if options.editorType is present and set to simple, if it is use SimpleEditor instead of Editor</span>
	   <span class="kd">var</span> <span class="nx">editorType</span> <span class="o">=</span> <span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">editorType</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">editorType</span> <span class="o">==</span> <span class="s1">&#39;simple&#39;</span><span class="p">))</span> <span class="o">?</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">SimpleEditor</span> <span class="o">:</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Editor</span><span class="p">);</span>
	
	   <span class="c">//If this fails then the code is not loaded on the page</span>
	   <span class="k">if</span> <span class="p">(</span><span class="nx">editorType</span><span class="p">)</span> <span class="p">{</span>
	       <span class="k">this</span><span class="p">.</span><span class="nx">editor</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">editorType</span><span class="p">(</span><span class="nx">id</span><span class="o">,</span> <span class="nx">_def</span><span class="p">);</span>
	       <span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
	   <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
	    <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Editor is not on the page&#39;</span><span class="p">);</span>
	   <span class="p">}</span>
	   
	   
	   <span class="c">/**</span>
<span class="c">   	 * Filters out msword html comments, classes, and other junk</span>
<span class="c">   	 * (complementary with YAHOO.widget.SimpleEditor.prototype.filter_msword, when filterWord option is true)</span>
<span class="c">   	 * @param {String} value The html string</span>
<span class="c">   	 * @return {String} The html string</span>
<span class="c">   	 */</span>
   	<span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">filter_msword</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span> <span class="p">{</span>
   	   
   	   <span class="nx">html</span> <span class="o">=</span> <span class="nx">editorType</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">filter_msword</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">html</span><span class="p">);</span>
   	   
   	   <span class="c">// if we don&#39;t filter ms word junk</span>
   	   <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;filterWord&#39;</span><span class="p">))</span> <span class="p">{</span>
   	      <span class="k">return</span> <span class="nx">html</span><span class="o">;</span>
   	   <span class="p">}</span>

   	   <span class="nx">html</span> <span class="o">=</span> <span class="nx">html</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/&lt;!--[^&gt;][\s\S]*--&gt;/gi</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="c">// strip (meta-)comments</span>
         <span class="nx">html</span> <span class="o">=</span> <span class="nx">html</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/&lt;\/?meta[^&gt;]*&gt;/gi</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="c">// strip meta tags</span>
         <span class="nx">html</span> <span class="o">=</span> <span class="nx">html</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/&lt;\/?link[^&gt;]*&gt;/gi</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="c">// strip link tags</span>
         <span class="nx">html</span> <span class="o">=</span> <span class="nx">html</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/ class=(&#39;|&quot;)?MsoNormal(&#39;|&quot;)?/gi</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="c">// strip MS office class</span>
         <span class="nx">html</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">html</span><span class="p">);</span> <span class="c">// trim spaces</span>
         
         <span class="k">return</span> <span class="nx">html</span><span class="o">;</span>
   	<span class="p">};</span>
   	
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Set the html content</span>
<span class="c">	 * @param {String} value The html string</span>
<span class="c">	 * @param {boolean} [sendUpdatedEvt] (optional) Wether this setValue should fire the updatedEvt or not (default is true, pass false to NOT send the event)</span>
<span class="c">	 */</span>
	<span class="nx">setValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">)</span> <span class="p">{</span>
	   <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">)</span> <span class="p">{</span>
	      <span class="kd">var</span> <span class="nx">iframeId</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;_editor&quot;</span><span class="o">;</span>
	      
	      <span class="c">// if editor iframe not rendered</span>
	      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">iframeId</span><span class="p">))</span> <span class="p">{</span>
	         <span class="c">// put value in textarea : will be processed by this.editor._setInitialContent (clean html, etc...)</span>
	         <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">value</span><span class="o">;</span>
	         
	      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
	         <span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">setEditorHTML</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>
         <span class="p">}</span>
      <span class="p">}</span>
	   
   	<span class="k">if</span><span class="p">(</span><span class="nx">sendUpdatedEvt</span> <span class="o">!==</span> <span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
   	   <span class="c">// fire update event</span>
         <span class="k">this</span><span class="p">.</span><span class="nx">fireUpdatedEvt</span><span class="p">();</span>
      <span class="p">}</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Get the html string</span>
<span class="c">	 * @return {String} the html string</span>
<span class="c">	 */</span>
	<span class="nx">getValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   
	   <span class="kd">var</span> <span class="nx">html</span><span class="o">;</span>
	   
	   <span class="k">try</span> <span class="p">{</span>
	      <span class="c">// trigger HTML cleaning (strip MS word or internal junk)</span>
	      <span class="c">// + save to hidden textarea (required for classic HTML &#39;submit&#39;)</span>
	      <span class="nx">html</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">saveHTML</span><span class="p">();</span>
	      <span class="k">return</span> <span class="nx">html</span><span class="o">;</span>
	   <span class="p">}</span>
	   <span class="k">catch</span><span class="p">(</span><span class="nx">ex</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span> <span class="p">}</span>
	<span class="p">}</span>
	
	
<span class="p">});</span>
	
<span class="c">// Register this class as &quot;html&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;html&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">RTEField</span><span class="o">,</span> <span class="p">[]);</span>
	
<span class="p">})();</span>
</pre></div>
