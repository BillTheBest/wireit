<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

   <span class="kd">var</span> <span class="nx">Event</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">;</span>

<span class="c">/**</span>
<span class="c"> * Create a textarea input</span>
<span class="c"> * @class inputEx.Textarea</span>
<span class="c"> * @extends inputEx.Field</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param {Object} options Added options:</span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> *	   &lt;li&gt;rows: rows attribute&lt;/li&gt;</span>
<span class="c"> *	   &lt;li&gt;cols: cols attribute&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">Textarea</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">inputEx</span><span class="p">.</span><span class="nx">Textarea</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">Textarea</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">StringField</span><span class="o">,</span> <span class="p">{</span>

   <span class="c">/**</span>
<span class="c">    * Set the specific options (rows and cols)</span>
<span class="c">    * @param {Object} options Options object as passed to the constructor</span>
<span class="c">    */</span>
   <span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">inputEx</span><span class="p">.</span><span class="nx">Textarea</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rows</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">rows</span> <span class="o">||</span> <span class="mi">6</span><span class="o">;</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">cols</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">cols</span> <span class="o">||</span> <span class="mi">23</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>
   
   <span class="c">/**</span>
<span class="c">    * Render an &#39;INPUT&#39; DOM node</span>
<span class="c">    */</span>
   <span class="nx">renderComponent</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
      
      <span class="c">// This element wraps the input node in a float: none div</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-StringField-wrapper&#39;</span><span class="p">});</span>
      
      <span class="c">// Attributes of the input field</span>
      <span class="kd">var</span> <span class="nx">attributes</span> <span class="o">=</span> <span class="p">{};</span>
      <span class="nx">attributes</span><span class="p">.</span><span class="nx">id</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">divEl</span><span class="p">.</span><span class="nx">id</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">divEl</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s1">&#39;-field&#39;</span><span class="o">:</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">generateId</span><span class="p">();</span>
      <span class="nx">attributes</span><span class="p">.</span><span class="nx">rows</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rows</span><span class="o">;</span>
      <span class="nx">attributes</span><span class="p">.</span><span class="nx">cols</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">cols</span><span class="o">;</span>
      <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span> <span class="nx">attributes</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span><span class="o">;</span>
      
      <span class="c">//if(this.options.maxLength) attributes.maxLength = this.options.maxLength;</span>
   
      <span class="c">// Create the node</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;textarea&#39;</span><span class="o">,</span> <span class="nx">attributes</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span>
      
      <span class="c">// Append it to the main element</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">);</span>
   <span class="p">}</span><span class="o">,</span>
   
	<span class="c">/**</span>
<span class="c">    * Uses the optional regexp to validate the field value</span>
<span class="c">    */</span>
   <span class="nx">validate</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> 
      <span class="kd">var</span> <span class="nx">previous</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">Textarea</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">validate</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
      
      <span class="c">// emulate maxLength property for textarea</span>
      <span class="c">//   -&gt; user can still type but field is invalid</span>
      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxLength</span><span class="p">)</span> <span class="p">{</span>
         <span class="nx">previous</span> <span class="o">=</span> <span class="nx">previous</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">getValue</span><span class="p">().</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxLength</span><span class="o">;</span>
      <span class="p">}</span>
      
      <span class="k">return</span> <span class="nx">previous</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>
   
   <span class="c">/**</span>
<span class="c">    * Add the minLength string message handling</span>
<span class="c">    */</span>
    <span class="nx">getStateString</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">state</span><span class="p">)</span> <span class="p">{</span>
	   <span class="k">if</span><span class="p">(</span><span class="nx">state</span> <span class="o">==</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">stateInvalid</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minLength</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minLength</span><span class="p">)</span> <span class="p">{</span>  
	      <span class="k">return</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">stringTooShort</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">minLength</span><span class="o">+</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">stringTooShort</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
	   
	   <span class="c">// Add message too long</span>
      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">state</span> <span class="o">==</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">stateInvalid</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxLength</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxLength</span><span class="p">)</span> <span class="p">{</span>
         <span class="k">return</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">stringTooLong</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxLength</span><span class="o">+</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">stringTooLong</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
      <span class="p">}</span>
	   <span class="k">return</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">Textarea</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">getStateString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">state</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	
	<span class="c">/**</span>
<span class="c">	 * Insert text at the current cursor position</span>
<span class="c">	 * @param {String} text Text to insert</span>
<span class="c">	 */</span>
	<span class="nx">insert</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="p">{</span>
		
		<span class="kd">var</span> <span class="nx">sel</span><span class="o">,</span> <span class="nx">startPos</span><span class="o">,</span> <span class="nx">endPos</span><span class="o">;</span>
		
		<span class="c">//IE support</span>
		<span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
			<span class="nx">sel</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span>
			<span class="nx">sel</span><span class="p">.</span><span class="nx">text</span> <span class="o">=</span> <span class="nx">text</span><span class="o">;</span>
		<span class="p">}</span>
		<span class="c">//Mozilla/Firefox/Netscape 7+ support</span>
		<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">selectionStart</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">selectionStart</span> <span class="o">==</span> <span class="s1">&#39;0&#39;</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">startPos</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">selectionStart</span><span class="o">;</span>
			<span class="nx">endPos</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">selectionEnd</span><span class="o">;</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="o">,</span> <span class="nx">startPos</span><span class="p">)</span><span class="o">+</span> <span class="nx">text</span><span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">endPos</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
		<span class="p">}</span> 
		<span class="k">else</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span> <span class="o">+=</span> <span class="nx">text</span><span class="o">;</span>
		<span class="p">}</span>	
	<span class="p">}</span>

<span class="p">});</span>

<span class="nx">inputEx</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">stringTooLong</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;This field should contain at most &quot;</span><span class="o">,</span><span class="s2">&quot; numbers or characters&quot;</span><span class="p">];</span>

<span class="c">// Register this class as &quot;text&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">Textarea</span><span class="o">,</span> <span class="p">[</span>
   <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;integer&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;Rows&#39;</span><span class="o">,</span>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;rows&#39;</span><span class="o">,</span> <span class="nx">value</span><span class="o">:</span> <span class="mi">6</span> <span class="p">}</span><span class="o">,</span>
   <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;integer&#39;</span><span class="o">,</span> <span class="kd">label</span><span class="o">:</span> <span class="s1">&#39;Cols&#39;</span><span class="o">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;cols&#39;</span><span class="o">,</span> <span class="nx">value</span><span class="o">:</span> <span class="mi">23</span> <span class="p">}</span>
<span class="p">]);</span>

<span class="p">})();</span>
</pre></div>
