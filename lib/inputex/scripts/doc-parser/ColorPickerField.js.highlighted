<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	
   <span class="kd">var</span> <span class="nx">widget</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="o">,</span> <span class="nx">Event</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">,</span> <span class="nx">Dom</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="o">;</span>
	
<span class="c">/**</span>
<span class="c"> * Create a Color picker input field</span>
<span class="c"> * @class inputEx.ColorPickerField</span>
<span class="c"> * @extends inputEx.Field</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param {Object} options Added options for ColorPickerField :</span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> * 	&lt;li&gt;showcontrols: show the input values RGB,HSV,RGB hex&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">ColorPickerField</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">inputEx</span><span class="p">.</span><span class="nx">ColorPickerField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">ColorPickerField</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">Field</span><span class="o">,</span> <span class="p">{</span>
   
	<span class="c">/**</span>
<span class="c">	 * Adds the &#39;inputEx-ColorPickerField&#39; default className</span>
<span class="c">	 * @param {Object} options Options object as passed to the constructor</span>
<span class="c">	 */</span>
   <span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
   	<span class="nx">inputEx</span><span class="p">.</span><span class="nx">ColorPickerField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">options</span><span class="p">);</span>
   	
   	<span class="c">// Overwrite options</span>
   	<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">?</span> <span class="nx">options</span><span class="p">.</span><span class="nx">className</span> <span class="o">:</span> <span class="s1">&#39;inputEx-Field inputEx-ColorPickerField&#39;</span><span class="o">;</span>

		<span class="c">// New options:</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showcontrols</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">showcontrols</span><span class="p">)</span> <span class="o">?</span> <span class="kc">true</span> <span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">showcontrols</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>
   
	<span class="c">/**</span>
<span class="c">	 * Render the color button and the colorpicker popup</span>
<span class="c">	 */</span>
	<span class="nx">renderComponent</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
		
	   <span class="c">// A hidden input field to store the color code </span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="o">,</span> <span class="p">{</span>
	      <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;hidden&#39;</span><span class="o">,</span> 
	      <span class="nx">name</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">name</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span><span class="o">,</span> 
	      <span class="nx">value</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">value</span> <span class="o">||</span> <span class="s1">&#39;#FFFFFF&#39;</span>
	   <span class="p">});</span>
	   	   
      <span class="c">// This element wraps the input node in a float: none div</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span> <span class="o">=</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">cn</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="o">,</span> <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;inputEx-ColorPickerField-wrapper&#39;</span><span class="p">});</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>

		<span class="c">// Create a Menu instance to house the ColorPicker instance</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">menuElId</span> <span class="o">=</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">generateId</span><span class="p">();</span>
		<span class="kd">var</span> <span class="nx">oColorPickerMenu</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">widget</span><span class="p">.</span><span class="nx">Menu</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">menuElId</span><span class="p">);</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">oColorPickerMenu</span> <span class="o">=</span> <span class="nx">oColorPickerMenu</span><span class="o">;</span>

		<span class="c">// Create a Button instance of type &quot;menu&quot;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">labelElId</span> <span class="o">=</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">generateId</span><span class="p">();</span>
		<span class="kd">var</span> <span class="nx">oButton</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">widget</span><span class="p">.</span><span class="nx">Button</span><span class="p">({</span> 
			<span class="nx">type</span><span class="o">:</span> <span class="s2">&quot;menu&quot;</span><span class="o">,</span> 
			<span class="nx">className</span><span class="o">:</span> <span class="s2">&quot;inputEx-ColorPicker-Button&quot;</span><span class="o">,</span>
			<span class="kd">label</span><span class="o">:</span> <span class="s2">&quot;&lt;em id=\&quot;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">labelElId</span><span class="o">+</span><span class="s2">&quot;\&quot; class=&#39;inputEx-ColorPicker-Label&#39;&gt;Current color is #FFFFFF.&lt;/em&gt;&quot;</span><span class="o">,</span> 
			<span class="nx">menu</span><span class="o">:</span> <span class="nx">oColorPickerMenu</span><span class="o">,</span> 
			<span class="nx">container</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span>
		<span class="p">});</span>
		
		<span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
		<span class="nx">oButton</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;appendTo&quot;</span><span class="o">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
			<span class="nx">oColorPickerMenu</span><span class="p">.</span><span class="nx">setBody</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span>
			<span class="nx">oColorPickerMenu</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">id</span> <span class="o">=</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">generateId</span><span class="p">();</span>
			<span class="nx">Dom</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">oColorPickerMenu</span><span class="p">.</span><span class="nx">body</span><span class="o">,</span> <span class="nx">that</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showcontrols</span> <span class="o">?</span> <span class="s2">&quot;inputEx-ColorPicker-Container&quot;</span> <span class="o">:</span> <span class="s2">&quot;inputEx-ColorPicker-Container-nocontrols&quot;</span><span class="p">);</span>
			<span class="nx">oColorPickerMenu</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;container&#39;</span><span class="p">));</span>
		<span class="p">});</span>

		<span class="c">/*</span>
<span class="c">			Add a listener for the &quot;click&quot; event.  This listener will be</span>
<span class="c">			used to defer the creation the ColorPicker instance until the </span>
<span class="c">			first time the Button&#39;s Menu instance is requested to be displayed</span>
<span class="c">			by the user.</span>
<span class="c">		*/</span>
		<span class="nx">oButton</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onButtonClickOnce</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
		
		<span class="k">this</span><span class="p">.</span><span class="nx">oButton</span> <span class="o">=</span> <span class="nx">oButton</span><span class="o">;</span>

		<span class="k">this</span><span class="p">.</span><span class="nx">fieldContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapEl</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="nx">onButtonClickOnce</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
		
		<span class="c">// Remove this event listener so that this code runs only once</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">oButton</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onButtonClickOnce</span><span class="o">,</span> <span class="k">this</span><span class="p">);</span>
		
		<span class="k">this</span><span class="p">.</span><span class="nx">oColorPicker</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">widget</span><span class="p">.</span><span class="nx">ColorPicker</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">oColorPickerMenu</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">id</span><span class="o">,</span> <span class="p">{</span>
				<span class="nx">showcontrols</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showcontrols</span><span class="o">,</span>
				<span class="nx">images</span><span class="o">:</span> <span class="p">{</span>
						<span class="nx">PICKER_THUMB</span><span class="o">:</span> <span class="s2">&quot;../lib/yui/colorpicker/assets/picker_thumb.png&quot;</span><span class="o">,</span>
						<span class="nx">HUE_THUMB</span><span class="o">:</span> <span class="s2">&quot;../lib/yui/colorpicker/assets/hue_thumb.png&quot;</span>
				<span class="p">}</span>
		<span class="p">});</span>
		
		<span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">oColorPicker</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;hex&quot;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
		<span class="p">}</span>

		<span class="c">/*</span>
<span class="c">			Add a listener for the ColorPicker instance&#39;s &quot;rgbChange&quot; event</span>
<span class="c">			to update the background color and text of the Button&#39;s </span>
<span class="c">			label to reflect the change in the value of the ColorPicker.</span>
<span class="c">		*/</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">oColorPicker</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;rgbChange&quot;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">onRgbChange</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="nx">onRgbChange</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">p_oEvent</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">sColor</span> <span class="o">=</span> <span class="s2">&quot;#&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">oColorPicker</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;hex&quot;</span><span class="p">);</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">oButton</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="o">,</span> <span class="nx">sColor</span><span class="p">);</span>
		<span class="kd">var</span> <span class="nx">el</span> <span class="o">=</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelElId</span><span class="p">);</span>
		<span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="nx">el</span><span class="o">,</span> <span class="s2">&quot;backgroundColor&quot;</span><span class="o">,</span> <span class="nx">sColor</span><span class="p">);</span>
		<span class="nx">el</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;Current color is &quot;</span> <span class="o">+</span> <span class="nx">sColor</span><span class="o">;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">sColor</span><span class="o">;</span>
		
		<span class="c">// timer to filter very close events (updatedEvt is sent only 50ms after the onRgbChange event)</span>
		<span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rgbChangeTimeout</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rgbChangeTimeout</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">rgbChangeTimeout</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
			<span class="nx">that</span><span class="p">.</span><span class="nx">onRgbChangeTimeout</span><span class="p">();</span>
		<span class="p">}</span><span class="o">,</span> <span class="mi">50</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="nx">onRgbChangeTimeout</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">fireUpdatedEvt</span><span class="p">();</span>
	<span class="p">}</span><span class="o">,</span>
	
	<span class="c">/**</span>
<span class="c">	 * Set the value</span>
<span class="c">	 * @param {String} value Color to set</span>
<span class="c">	 * @param {boolean} [sendUpdatedEvt] (optional) Wether this setValue should fire the updatedEvt or not (default is true, pass false to NOT send the event)</span>
<span class="c">	 */</span>
	<span class="nx">setValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">)</span> <span class="p">{</span>
	   <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">value</span><span class="o">;</span>
		
		<span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">oButton</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">oButton</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="o">,</span> <span class="nx">value</span><span class="p">);</span>
			<span class="kd">var</span> <span class="nx">el</span> <span class="o">=</span> <span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelElId</span><span class="p">);</span>
			<span class="k">if</span><span class="p">(</span><span class="nx">el</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="nx">el</span><span class="o">,</span> <span class="s2">&quot;backgroundColor&quot;</span><span class="o">,</span> <span class="nx">value</span><span class="p">);</span>
				<span class="nx">el</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;Current color is &quot;</span> <span class="o">+</span> <span class="nx">value</span><span class="o">;</span>
			<span class="p">}</span>
			<span class="k">else</span> <span class="p">{</span>
				<span class="nx">Event</span><span class="p">.</span><span class="nx">onAvailable</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelElId</span><span class="o">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
					<span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="s2">&quot;backgroundColor&quot;</span><span class="o">,</span> <span class="nx">value</span><span class="p">);</span>
					<span class="k">this</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;Current color is &quot;</span> <span class="o">+</span> <span class="nx">value</span><span class="o">;</span>
				<span class="p">});</span>
			<span class="p">}</span>
		<span class="p">}</span>
	
		<span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">oColorPicker</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">oColorPicker</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;hex&quot;</span><span class="o">,</span> <span class="nx">value</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
		<span class="p">}</span>

		<span class="c">// Call Field.setValue to set class and fire updated event</span>
		<span class="nx">inputEx</span><span class="p">.</span><span class="nx">ColorPickerField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setValue</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">value</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">);</span>
	<span class="p">}</span><span class="o">,</span>
	   
	<span class="c">/**</span>
<span class="c">	 * Return the color value</span>
<span class="c">	 * @return {String} Color value</span>
<span class="c">	 */</span>
	<span class="nx">getValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	   <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="o">;</span>
	<span class="p">}</span>
	  
<span class="p">});</span> 
	
	
<span class="c">// Register this class as &quot;color&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;colorpicker&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">ColorPickerField</span><span class="o">,</span> <span class="p">[]);</span>
	
<span class="p">})();</span>
</pre></div>
