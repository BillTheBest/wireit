<div class="highlight"><pre><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

   <span class="kd">var</span> <span class="nx">Event</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">,</span> <span class="nx">lang</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">;</span>

<span class="c">/**</span>
<span class="c"> * A field limited to number inputs (floating)</span>
<span class="c"> * @class inputEx.DateTimeField</span>
<span class="c"> * @extends inputEx.CombineField</span>
<span class="c"> * @constructor</span>
<span class="c"> * @param {Object} options Added options</span>
<span class="c"> * &lt;ul&gt;</span>
<span class="c"> *    &lt;li&gt;dateFormat: same as DateField&lt;/li&gt;</span>
<span class="c"> * &lt;/ul&gt;</span>
<span class="c"> */</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateTimeField</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
   <span class="nx">options</span><span class="p">.</span><span class="nx">fields</span> <span class="o">=</span> <span class="p">[</span>
      <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;datepicker&#39;</span><span class="p">}</span><span class="o">,</span>
      <span class="p">{</span><span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;time&#39;</span><span class="p">}</span>
   <span class="p">];</span>
   <span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dateFormat</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">dateFormat</span><span class="o">;</span>
   <span class="p">}</span>
   <span class="nx">options</span><span class="p">.</span><span class="nx">separators</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">separators</span> <span class="o">||</span> <span class="p">[</span><span class="kc">false</span><span class="o">,</span> <span class="s2">&quot;&amp;nbsp;&amp;nbsp;&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="p">];</span>
   <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateTimeField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span><span class="nx">options</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateTimeField</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">CombineField</span><span class="o">,</span> <span class="p">{</span>   
   <span class="c">/**</span>
<span class="c">    * Concat the values to return a date</span>
<span class="c">    * @return {Date} The javascript Date object</span>
<span class="c">    */</span>
   <span class="nx">getValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
      <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">inputs</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getValue</span><span class="p">();</span>
      <span class="k">if</span><span class="p">(</span> <span class="nx">d</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span> <span class="p">)</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
      <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">inputs</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">getValue</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">);</span>
      
      <span class="nx">d</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
      <span class="nx">d</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
      <span class="nx">d</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
      
      <span class="k">return</span> <span class="nx">d</span><span class="o">;</span>
   <span class="p">}</span><span class="o">,</span>

   <span class="c">/**</span>
<span class="c">    * Set the value of both subfields</span>
<span class="c">    * @param {Date} val Date to set</span>
<span class="c">    * @param {boolean} [sendUpdatedEvt] (optional) Wether this setValue should fire the updatedEvt or not (default is true, pass false to NOT send the event)</span>
<span class="c">    */</span>
   <span class="nx">setValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">val</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">val</span><span class="p">))</span> <span class="p">{</span><span class="k">return</span><span class="o">;</span><span class="p">}</span>
      <span class="kd">var</span> <span class="nx">h</span> <span class="o">=</span> <span class="nx">val</span><span class="p">.</span><span class="nx">getHours</span><span class="p">();</span>
      <span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="nx">val</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span>
      <span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">val</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">();</span>
      <span class="kd">var</span> <span class="nx">time</span> <span class="o">=</span> <span class="p">([(</span><span class="nx">h</span> <span class="o">&lt;</span> <span class="mi">10</span> <span class="o">?</span> <span class="s1">&#39;0&#39;</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="o">,</span> <span class="p">(</span><span class="nx">m</span> <span class="o">&lt;</span> <span class="mi">10</span> <span class="o">?</span> <span class="s1">&#39;0&#39;</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="o">,</span> <span class="p">(</span><span class="nx">s</span> <span class="o">&lt;</span> <span class="mi">10</span> <span class="o">?</span> <span class="s1">&#39;0&#39;</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="nx">s</span><span class="p">]).</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">);</span>
      <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateTimeField</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">setValue</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="p">[</span><span class="nx">val</span><span class="o">,</span> <span class="nx">time</span><span class="p">]</span><span class="o">,</span> <span class="nx">sendUpdatedEvt</span><span class="p">);</span>
   <span class="p">}</span>

<span class="p">});</span>



<span class="c">// Register this class as &quot;time&quot; type</span>
<span class="nx">inputEx</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&quot;datetime&quot;</span><span class="o">,</span> <span class="nx">inputEx</span><span class="p">.</span><span class="nx">DateTimeField</span><span class="p">);</span>

<span class="p">})();</span>
</pre></div>
